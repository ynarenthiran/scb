{"version":3,"sources":["wrappers/i18n/i18n.tsx","wrappers/i18n/en.tsx","wrappers/i18n/zh.tsx","services/common-http.service.tsx","components/form/form.tsx","components/tab/review-booking/review-booking.tsx","components/modal.tsx","components/tab/new-booking/new-booking.tsx","components/tab/update-booking/update-booking.tsx","components/tab/tab.tsx","components/important-notes/important-notes.tsx","components/captcha/Captcha.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["resources","en","translation","captcha","header","placeholder","button","selectOptions","English","Chinese","TechnicalError","Maintenance","Thankyou","Error","tab","new_booking","update_booking","importantNotes","title","hint","back","submit","review","refnumber","booking_success","booking_duplicatemobile","booking_noslotavaialble","mobile","email","cancelbutton","cancel_success","norecordfound","cancel_failure","forms","modal","review_orders","response","zh","i18n","use","initReactI18next","init","lng","navigator","language","require","config","APPURL","process","CommonHttpService","uuid","url","lang","console","log","this","fetch","method","headers","then","json","body","JSON","stringify","SC_CLIENT_CONTEXT","uuidv4","BASE_URL","changeLanguage","OptGroup","Select","Option","Forms","props","form","validationMessages","state","datesLoaded","selectedDate","selectedTimeSlot","datesLoading","info","termsCondition","branchList","branchSelected","dateList","collectionTimeSlots","validation","service","allFields","fields","getBranchList","setState","getValue","get","res","getDateList","catch","err","event","value","data","slots","date","_","format","status","slotTime","e","field","prop","fieldData","label","onChange","touched","target","test","key","length","Number","t","className","id","layout","Item","name","size","defaultValue","onFocus","setTouched","onBlur","setData","getMessage","maxLength","Group","compact","disabled","validate","labelInValue","Object","entries","map","k","v","d","code","chineseName","disabledDate","getTimeSlots","style","width","dt","direction","checked","Component","FormsTranslated","withTranslation","ReviewBooking","selectedRowKeys","mobileSearch","loadingAppointment","appointmentData","find","moment","reject","pf","replace","ReviewBookingTranslated","ModalComponent","isModalVisible","visible","onCancel","footer","type","onClick","image","baseURL","description","message","pm","ModalComponentTranslated","Footer","Layout","formControls","required","hide","NewBooking","navigate","bookingProgress","refNo","orderStatus","showModal","modalMsg","modalMethod","overallvalidation","undefined","mobileNumber","mobileNumberValidation","declaration","declarationValidation","validateCaptcha","getBranchCode","post","result","error","backToChange","newFields","align","danger","icon","ArrowLeftOutlined","disableButton","ArrowRightOutlined","submitOrder","reviewOrder","modalClosed","NewBookingTranslated","dateFormat","UpdateBooking","cancellationDone","rowSelected","selectedRows","onSelectChange","rowSelection","columns","dataIndex","bind","getAppointmentData","el","cancelAppointment","attributes","verifyButtonLoader","getAppointments","autoFocus","onPressEnter","locale","emptyText","dataSource","bordered","UpdateBookingTranslated","Header","Content","TabPane","Tabs","Tab","tabChange","defaultActiveKey","TabTranslated","ImportantNotes","ImportantNotesTranslated","Captcha","captchaInput","reloadCaptchaLoader","changeLanguageHandler","getStatus","setLanguage","paramValue","toLowerCase","refreshCaptcha","captchainvalid","setUUID","toUpperCase","propsdata","src","alt","GlobalOutlined","shape","ReloadOutlined","verifyCaptcha","block","CaptchaTranslated","App","path","component","to","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.592e539d.chunk.js","sourcesContent":["import i18n from \"i18next\";\nimport { initReactI18next } from \"react-i18next\";\nimport en from \"./en\";\nimport zh from \"./zh\";\n\nexport interface I18NConfig {\n  user: {\n    login: String;\n    signup: String;\n    username_placeholder: String;\n    password_placeholder: String;\n    image_url: String;\n  };\n}\n\nconst resources = {\n  en: {\n    translation: en,\n  },\n  zh: {\n    translation: zh,\n  },\n};\n\ni18n\n  .use(initReactI18next)\n  .init({ resources: resources as any, lng: navigator.language });\n\nexport default i18n;","const en = {\n    captcha: {\n        header: 'Type the verification code (in Capital Letters)',\n        placeholder: 'Verification Code',\n        button: 'Verify to Proceed',\n        selectOptions: {\n            English: '中文',\n            Chinese: 'Chinese'\n        },\n        TechnicalError: 'This service is temporarily unavailable for system maintenance. Please try again later. Apologies for the'\n        +' inconvenience caused',\n        Maintenance: 'This service is temporarily unavailable for system maintenance. Please try again later. Apologies for the'\n        +' inconvenience caused',\n        Thankyou: 'Thank you for your interest for this service, however our new banknotes reservation are fully booked. Please visit our branches'\n        +' for assistance.',\n        Error: 'The verification code you entered is incorrect, please retry.'\n    },\n    tab: {\n        new_booking: 'Booking',\n        update_booking: 'Enquiry/Cancel'\n    },\n    importantNotes: {\n        title: 'Important Notes',\n        1: ' All Online Pre-orders, once submitted, cannot be amended.',\n        2: ' No express queue will be arranged for the collection of banknotes pre-ordered online.',\n        3: 'Clients, when collecting the banknote(s), may instruct the Bank to debit the total sum from the his/her personal bank account or by exchanging the same amount of old banknote(s) (in Hong Kong currency) at the collection counters.',\n        4: 'Clients must check the conditions of the banknote(s) at the counters of the Designated Collection Branch as shown above. Replacement of the banknote(s) will only be arranged if found damaged at the time of collection. Requests for replacement of the banknote(s) will not be accepted after the clients have left the collection counters.',\n        5: 'lf a client does not collect the banknote(s) at the Designated Collection Branch and on the Designated Collection Date, or fails to collect the banknote(s)in accordance with the terms and conditions provided, the Bank will not keep the banknote(s) for the client. The client shall be deemed to have forgone the right to collect the banknote(s) and that the Bank will dispose of the uncollected banknote(s) at its absolute discretion.',\n        6: 'Unless otherwise stated, any reference to a date in the terms and conditions only refers to the normal business hours of the Bank on such date, and does not include any time within which a tropical cyclone warning signal number 8 or above, a Black Rainstorm warning signal, is in force in Hong Kong.',\n        7: 'Every mobile number can only register for one pack of new banknotes per day.'\n    },\n    new_booking: {\n        header: 'Chinese New Year New Banknotes Booking',\n        hint: 'Please fill in the below ordering form to complete the registration',\n        button: {\n            back: 'Back',\n            submit: 'Submit',\n            review: 'Review Order'\n        },\n        refnumber: 'Your Reference Number is',\n        booking_success: 'Thanks for your submission of this pre-order form: A sms confirmation will be sent to your mobile number provided in this form.',\n        booking_duplicatemobile: 'Same mobile number is registered.  Every mobile number can only register for 1 slot per day, please enter another mobile number or register with another collection date for the booking.',\n        booking_noslotavaialble: '* The quota is out for this branch, please pick another date or branch'\n    },\n    update_booking: {\n        mobile: 'Mobile Number',\n        email: 'Email Address',\n        button: 'Submit',\n        cancelbutton: 'Cancel selected booking',\n        cancel_success: 'Your selected booking has been cancelled. A sms confirmation will be sent to your mobile number provided in this form.',\n        norecordfound: 'The mobile number you entered is not registered for this service, please retry ',\n        cancel_failure: 'We are unable to process your request right now. Please retry later.'\n    },\n    forms: {\n        'SelectPlaceholder': 'Please Select...',\n        'Title': 'Title',\n        'LastName': 'Last Name',\n        'MobileNumber': 'Mobile Number',\n        'CollectionBranch': 'Designated Collection Branch',\n        'CollectionDate': 'Collection Date',\n        'CollectionTimeslot': 'Collection Timeslot',\n        'Quantity': 'Quantity',\n        'Declaration': 'Declaration',\n        'QuantityText': 'Total value per pack: HK$3,000. (Denomination: HK$20 x 100pcs, HK$50 x 20pcs)',\n        'DeclarationPoints': {\n            1: 'I confirm the above information is accurate to my knowledge. No amendment is allowed once the form is submitted',\n            2: 'I have read, understood and agreed to the terms and conditions of this application'\n        },\n        \"regionThree\": \"---- New Territories ---- \",\n        \"regionTwo\": \"---- Kowloon  ---- \",\n        \"regionOne\": \"---- Hong Kong ----\",\n        \"salutationOne\": \"Mr.\",\n        \"salutationTwo\": \"Mrs.\",\n        \"salutationThree\": \"Miss\",\n        'noslotsavailable': 'All slots are full please select different branch'\n\n    },\n    modal:{\n        'okbutton': 'Ok'\n    },\n    review_orders: {\n\n    },\n    response: {\n\n    }\n};\nexport default en;","const zh = {\n    captcha: {\n        header: '键入验证代码（大写字母)',\n        placeholder: '验证代码',\n        button: '验证继续',\n        selectOptions: {\n            English: 'EN',\n            Chinese: 'EN'\n        },\n        TechnicalError: '暫時未能提供服務，請稍後再試。如有不便，敬請原諒。',\n        Maintenance: '暫時未能提供服務，請稍後再試。如有不便，敬請原諒。',\n        Thankyou: '多謝閣下對此服務的興趣。 由於網上預訂鈔票反應熱烈，全部網上配額已被預訂。如需協助，請到臨我們的分行。',\n        Error: \"您所輸入的驗證碼不正確，請重新輸入。\"\n    },\n    tab: {\n        new_booking: '预订',\n        update_booking: '查询/取消'\n    },\n    importantNotes: {\n        title: '重要事項:',\n        1: '所有網上預定申請一經提交，不得修改。',\n        2: '指定領鈔分行並不會安排快捷櫃檯予客戶領取鈔票。',\n        3: '客戶可指示銀行從個人銀行賬戶中扣除全部兌換金額，或在櫃檯兌換相同數值的舊鈔票（港幣），從而領取鈔票。',\n        4: '客戶應在指定領鈔分行的櫃檯查看鈔票的狀況。更換鈔票只能在領鈔時發現損壞的情況下進行安排。客戶離開領鈔櫃檯後，本行將不接受更換鈔票的要求。',\n        5: '如客戶沒有在指定領鈔分行和指定日期領取鈔票，或未按照規定的條款和細則領取鈔票，本行將不會為客戶保留鈔票。客戶將被視為已經放棄收取鈔票的權利，本行將自行決定處置未領取的鈔票。',\n        6: '除另有說明外，凡於條款及細則內提及的日期，僅指本行於該日期的正常營業時間，並不包括當香港發出8號或以上熱帶氣旋警告信號或黑色暴雨警告信號時之任何時間。',\n        7: '每個手機號碼在每天只能預訂一套套裝新鈔票。'\n    },\n    new_booking: {\n        header: '網上預訂新鈔票',\n        hint: '请填写以下订购表以完成注册',\n        button: {\n            back: '返回',\n            submit: '提交',\n            review: '审核订单'\n        },\n        booking_success: 'Thanks for your submission of this pre-order form: A sms confirmation will be sent to your mobile number provided in this form.',\n        booking_duplicatemobile: '手機號碼已登記此服務。每個手機號碼在每天只能預訂一套套裝新鈔票。請登記另一個領鈔日期或使用另一個手機號碼進行預訂。',\n        booking_noslotavaialble: '* 此分行的網上配額已被全部預訂，請選擇其他日期或分行。'\n    },\n    update_booking: {\n        mobile: '移动号码',\n        email: '电子邮件地址',\n        button: '提交',\n        cancelbutton: '取消已選擇的預訂',\n        cancel_success: 'Your selected booking has been cancelled. A sms confirmation will be sent to your mobile number provided in this form.',\n        norecordfound: 'The mobile number you entered is not registered for this service, please retry ',\n        cancel_failure: '我們未能處理您的指示。請稍後再試。'\n    },\n    forms: {\n        'SelectPlaceholder': 'Please Select...',\n        'Title': 'Title',\n        'LastName': 'Last Name',\n        'MobileNumber': 'Mobile Number',\n        'CollectionBranch': 'Collection Branch',\n        'CollectionDate': 'Collection Date',\n        'CollectionTimeslot': 'Collection Timeslot',\n        'Quantity': 'Quantity',\n        'Declaration': 'Declaration',\n        'QuantityText': 'Total value per pack: HK$3,000. (Denomination: HK$20 x 100pcs, HK$50 x 20pcs)',\n        'DeclarationPoints': {\n            1: 'I confirm the above information is accurate to my knowledge. No amendment is allowed once the form is submitted',\n            2: 'I have read, understood and agreed to the terms and conditions of this application'\n        },\n        \"regionThree\": \"---- New Territories ---- \",\n        \"regionTwo\": \"---- Kowloon  ---- \",\n        \"regionOne\": \"---- Hong Kong ----\"\n    },\n    modal:{\n        'okbutton': 'Ok'\n    },\n    review_orders: {\n\n    },\n    response: {\n\n    }\n};\nexport default zh;","import { v4 as uuidv4 } from 'uuid';\r\nimport i18n from '../wrappers/i18n/i18n';\r\n\r\nrequire('dotenv').config();\r\n\r\n\r\nconst APPURL = `${process.env.REACT_APP_HOST_URL || 'http://localhost:9090'}/origination/api/v3/cnynotes`;\r\nexport class CommonHttpService {\r\n    language: any;\r\n    uuid: any;\r\n    get(url: string, uuid: any, lang: any) {\r\n        console.log(\"language from captcha is:\" + this.language)\r\n        return fetch(`${APPURL}${url}`, {\r\n            method: 'GET',\r\n            headers: this.headers(uuid, lang)\r\n        }).then(response => response.json())\r\n    }\r\n\r\n    post(url: string, body: any, uuid: any, lang: any) {\r\n        console.log(\"language from captcha is:\" + this.language)\r\n        return fetch(`${APPURL}${url}`, {\r\n            method: 'POST',\r\n            headers: this.headers(uuid, lang),\r\n            body: JSON.stringify(body)\r\n        }).then(response => response)\r\n    }\r\n\r\n    headers(uuid: any, lang: any) {\r\n        let headers: any = {};\r\n        headers[\"Content-Type\"] = \"application/json\";\r\n        headers[\"Accept\"] = \"application/json\";\r\n        let SC_CLIENT_CONTEXT = {\r\n            \"reqId\": `${uuidv4()}`,\r\n            \"Channel\": \"Web\",\r\n            \"Country\": \"HK\",\r\n            \"Language\": lang,\r\n            \"AppName\": \"RCWB\",\r\n            \"ClientId\": \"WEB\",\r\n            \"RumDevice\": \"devicebrowserversion\",\r\n            \"appVersion\": \"1.0\",\r\n            \"userId\": uuid,\r\n            \"releaseVersion\": \"cnynotes\"\r\n        };\r\n        headers[\"SC-CLIENT-CONTEXT\"] = JSON.stringify(SC_CLIENT_CONTEXT);\r\n        return headers;\r\n    };\r\n\r\n    get baseURL(): string {\r\n        // Development\r\n        // return process.env.BASE_URL || '/assets';\r\n        // Internal Demo\r\n        return process.env.BASE_URL || '/scb/assets';\r\n        // UAT\r\n        // return process.env.BASE_URL || '/origination/hkcnybook/static';\r\n    }\r\n\r\n    setLanguage(lang: string) {\r\n        this.language = lang;\r\n        i18n.changeLanguage(this.language);\r\n    }\r\n\r\n    setUUID(uuid: string) {\r\n        this.uuid = uuid;\r\n        i18n.changeLanguage(this.language);\r\n    }\r\n}","import './form.scss';\n\nimport { Form, Input, Select, DatePicker, Space, Checkbox } from 'antd';\nimport { Component } from 'react';\nimport { CommonHttpService } from '../../services/common-http.service';\nimport * as _ from 'lodash';\nimport { withTranslation } from 'react-i18next';\nconst { OptGroup, Option } = Select;\n\n\nclass Forms extends Component {\n    props: any = this.props;\n    form: any;\n    validationMessages: any = {};\n    state = { datesLoaded: false, selectedDate: null, selectedTimeSlot: null, datesLoading: false, info: false, termsCondition: false, mobile: '', branchList: {}, branchSelected: '', dateList: [], collectionTimeSlots: [], validation: this.validationMessages };\n    service = new CommonHttpService();\n\n    constructor(props?: any) {\n        super(props);\n        props = this.props;\n        console.log(\"uuid in constructor:\" + this.props.uuid)\n    }\n\n\n    componentDidMount() {\n        this.getBranchList();\n        this.setState({ mobile: this.getValue('mobileNumber') });\n    }\n\n    getBranchList() {\n        console.log(\"uuid is:\" + this.props.uuid)\n        this.service.get(`/branchlist/${this.props.uuid}`, this.props.uuid, this.props.lang).then((res) => {\n            this.setState({ branchList: res });\n            if (this.getValue('collectionBranch')) {\n                this.getDateList(this.getValue('collectionBranch'));\n            }\n        }).catch((err) => {\n            console.log(err);\n        });\n    }\n\n    getDateList(event: any) {\n        this.setState({ selectedDate: null })\n        this.setState({ selectedTimeSlot: null })\n        this.setState({ datesLoading: true })\n        this.service.get(`/slots/${event.value}/${this.props.uuid}`, this.props.uuid, this.props.lang).then((res) => {\n            this.setState({ datesLoading: false })\n            this.setState({ dateList: res.data.slots });\n            this.setState({ datesLoaded: true });\n            /*if (this.getValue('collectionDate')) {\n                this.setState({ selectedDate: this.getValue('collectionDate') });\n                this.getTimeSlots(this.getValue('collectionDate'));\n            }*/\n        }).catch((err) => {\n\t\t\tthis.setState({ datesLoading: false })\n            this.setState({ datesLoaded: true });\n            console.log(err);\n        });\n    }\n\n    disabledDate(event: any) {\n        const date: any = event ? _.find(this.state.dateList, ['slot-date', event.format('DD/MM/YYYY')]) : null;\n        return !date || (date && !date.status);\n    }\n\n    getTimeSlots(event: any) {\n        this.setState({ selectedTimeSlot: null })\n        const date: any = event ? _.find(this.state.dateList, ['slot-date', event.format('DD/MM/YYYY')]) : null;\n        if (date && date.status) {\n            this.setState({ collectionTimeSlots: date.slotTime });\n            /*if (this.getValue('collectionTimeSlot')) {\n                this.setState({ selectedTimeSlot: this.getValue('collectionTimeSlot') });\n            }*/\n        }\n    }\n\n    allFields: any = this.props.fields;\n\n    setData(e: any, field: any, prop?: any) {\n        const fieldData = _.find(this.allFields, ['name', field]);\n        if (field === 'declaration') {\n            fieldData[prop] = e;\n            this.setState({ [prop]: e });\n            this.validation(field, fieldData.label);\n            this.props.onChange(this.allFields);\n        } else if (fieldData) {\n            fieldData.value = e;\n            this.validation(field, fieldData.label);\n            this.props.onChange(this.allFields);\n            if(field==='collectionDate'){\n                this.setState({ selectedDate: e })\n            }if(field==='collectionTimeslot'){\n                this.setState({ selectedTimeSlot: e })\n            }\n        }\n        \n    }\n\n    setTouched(field: any) {\n        const fieldData = _.find(this.allFields, ['name', field]);\n        if (fieldData) {\n            fieldData.touched = true;\n            this.props.onChange(this.allFields);\n        }\n    }\n\n    validate(e: any) {\n        const re = /^[0-9\\b]+$/;\n        if (e.target.value === '' || re.test(e.target.value)) {\n            this.setState({ mobile: e.target.value })\n        }\n    }\n\n    getValue(key: string, prop?: string) {\n        const data = _.find(this.props.fields, ['name', key]);\n        if (data) {\n            const value = data[prop || 'value'] || null;\n            return value;\n        }\n        return null;\n    }\n\n    validation(field: any, title: any) {\n        const validation: any = this.state.validation;\n        if (!this.getValue(field)) {\n            if (field === 'declaration') {\n                if (!this.getValue(field, 'info') || !this.getValue(field, 'termsCondition')) {\n                    validation[field] = `${title} is required.`;    \n                } else {\n                    validation[field] = null;    \n                }\n            } else {\n                validation[field] = `${title} is required.`;\n            }\n        } else if (field === 'mobileNumber') {\n            if (this.getValue(field).length !== 8) {\n                validation[field] = `${title} should be 8 digits`;\n            } else if (!Number(this.getValue(field))) {\n                validation[field] = `${title} should not be 0`;\n            } else {\n                validation[field] = null;\n            }   \n        }else {\n            validation[field] = null;\n        }\n        this.setState({ validation });\n    }\n\n    getMessage(field: string) {\n        return this.state.validation[field] as string;\n    }\n\n    render() {\n        const { t }: any = this.props;\n        return (\n            <div className='form'>\n                {\n                    this.state.datesLoading &&\n                    <div id=\"loader\" className=\"loader\"></div>\n                }\n                <div className=\"title\">Order Details</div>\n                <Form layout=\"vertical\">\n                    <Form.Item name='title' label={t('forms.Title')}>\n                        <Select size=\"large\" placeholder={t('forms.SelectPlaceholder')} defaultValue={this.getValue('title')} onFocus={() => this.setTouched('title')} onBlur={() => this.validation('title', t('forms.Title'))} onChange={(e) => this.setData(e, 'title')}>\n                            <Option value=\"Mr.\">Mr.</Option>\n                            <Option value=\"Mrs.\">Mrs.</Option>\n                            <Option value=\"Miss\">Miss</Option>\n                        </Select>\n                        {\n                            this.getMessage('title') && <span className=\"field-error\">{this.getMessage('title')}</span>\n                        }\n                    </Form.Item>\n                    <Form.Item name='lastName' label={t('forms.LastName')}>\n                        <Input size=\"large\" maxLength={30} placeholder={t('forms.LastName')} defaultValue={this.getValue('lastName')} onFocus={() => this.setTouched('lastName')} onBlur={() => this.validation('lastName', t('forms.LastName'))} onChange={(e) => this.setData(e.target.value, 'lastName')} />\n                        {\n                            this.getMessage('lastName') && <span className=\"field-error\">{this.getMessage('lastName')}</span>\n                        }\n                    </Form.Item>\n                    <Form.Item name='mobileNumber' label={t('forms.MobileNumber')}>\n                        <Input.Group compact>\n                            <Input className='country-code' disabled={true} size=\"large\" defaultValue=\"852\" />\n                            <Input className='mobile-number' maxLength={8} size=\"large\" placeholder={t('forms.MobileNumber')} defaultValue={this.getValue('mobileNumber')} onFocus={() => this.setTouched('mobileNumber')} onBlur={() => this.validation('mobileNumber', t('forms.MobileNumber'))} onChange={(e) => { this.setData(e.target.value, 'mobileNumber'); this.validate(e); }} />\n                        </Input.Group>\n                        {\n                            this.getMessage('mobileNumber') && <span className=\"field-error\">{this.getMessage('mobileNumber')}</span>\n                        }\n                    </Form.Item>\n                    <Form.Item name='collectionBranch' label={t('forms.CollectionBranch')}>\n                        <Select labelInValue size=\"large\" placeholder={t('forms.SelectPlaceholder')} defaultValue={this.getValue('collectionBranch')} onFocus={() => this.setTouched('collectionBranch')} onBlur={() => this.validation('collectionBranch', t('forms.CollectionBranch'))} onChange={(e) => { this.getDateList(e); this.setData(e, 'collectionBranch'); }}>\n                            {Object.entries(this.state.branchList).map(([k, v]: any) => (\n                                _.size(v) &&\n                                <OptGroup label={k === 'regionOne' ? t('forms.regionOne') : ((k === 'regionTwo' ? t('forms.regionTwo') : t('forms.regionThree')))}>\n                                    {v.map((d: any) => (\n                                        <Option value={d.code}>{(this.props.lang === 'en') ? d.name : d.chineseName}</Option>\n                                    ))}\n                                </OptGroup>\n                            ))}\n                        </Select>\n                        {\n                            this.getMessage('collectionBranch') && <span className=\"field-error\">{this.getMessage('collectionBranch')}</span>\n                        }\n                    </Form.Item>\n                    {\n                        this.state.dateList.length === 0 && this.state.datesLoaded &&\n                        <span className=\"field-error\">{t('forms.noslotsavailable')}</span>\n                    }\n                    <Form.Item name='collectionDate' label={t('forms.CollectionDate')}>\n                        <DatePicker disabled={_.size(this.state.dateList) < 1} size=\"large\" format={'DD/MM/YYYY'} defaultValue={this.getValue('collectionDate')} value = {this.state.selectedDate} onFocus={() => this.setTouched('collectionDate')} onBlur={() => this.validation('collectionDate', t('forms.CollectionDate'))} disabledDate={(e) => this.disabledDate(e)} onChange={(e) => { this.getTimeSlots(e); this.setData(e, 'collectionDate'); }}\n                            style={{\n                                width: '100%',\n                            }}\n                        />\n                        {\n                            this.getMessage('collectionDate') && <span className=\"field-error\">{this.getMessage('collectionDate')}</span>\n                        }\n                    </Form.Item>\n                    <Form.Item name='collectionTimeslot' label={t('forms.CollectionTimeslot')}>\n                        <Select size=\"large\" disabled={_.size(this.state.dateList) < 1} placeholder={t('forms.SelectPlaceholder')} value = {this.state.selectedTimeSlot} defaultValue={this.getValue('collectionTimeslot')} onFocus={() => this.setTouched('collectionTimeslot')} onBlur={() => this.validation('collectionTimeslot', t('forms.CollectionTimeslot'))} onChange={(e) => this.setData(e, 'collectionTimeslot')}>\n                            {this.state.collectionTimeSlots.map((dt) => (\n                                <Option value={dt['slot-time']}>{dt['slot-time']}</Option>\n                            ))}\n                        </Select>\n                        {\n                            this.getMessage('collectionTimeslot') && <span className=\"field-error\">{this.getMessage('collectionTimeslot')}</span>\n                        }\n                    </Form.Item>\n                    <Form.Item label={t('forms.Quantity')}>\n                        <Space direction='vertical'>\n                            <span className=\"ant-form-text\">1</span>\n                            <span className=\"ant-form-text\">{t('forms.QuantityText')}</span>\n                        </Space>\n                    </Form.Item>\n                    <Form.Item label={t('forms.Declaration')}>\n                        <Space direction='vertical'>\n                            <Checkbox checked={this.getValue('declaration', 'info')} onChange={(e) => this.setData(e.target.checked, 'declaration', 'info')}>{t('forms.DeclarationPoints.1')}</Checkbox>\n                            <Checkbox checked={this.getValue('declaration', 'termsCondition')} onChange={(e) => this.setData(e.target.checked, 'declaration', 'termsCondition')}>{t('forms.DeclarationPoints.2')}</Checkbox>\n                        </Space>\n                        {\n                            this.getMessage('declaration') && <span className=\"field-error\">{this.getMessage('declaration')}</span>\n                        }\n                    </Form.Item>\n                </Form>\n            </div>\n        )\n    }\n}\nconst FormsTranslated: any = withTranslation()(Forms);\nexport default FormsTranslated;","import './review-booking.scss';\n\nimport { Component } from \"react\";\nimport { withTranslation } from 'react-i18next';\nimport { CommonHttpService } from '../../../services/common-http.service';\nimport _ from 'lodash';\nimport moment from 'moment'\n\nclass ReviewBooking extends Component {\n    state = { mobile: '', selectedRowKeys: [], mobileSearch: null, loadingAppointment: false, appointmentData: null, status: null };\n    service = new CommonHttpService();\n    \n    fields: any = [];\n\n    componentWillUnmount() {\n        this.setState({ mobile: '', selectedRowKeys: [], mobileSearch: null, loadingAppointment: false, appointmentData: null, status: null });\n    }\n\n    componentDidMount() {\n        console.log(this.props.fields);\n    }\n\n    props: any = this.props;\n    constructor(props?: any) {\n        super(props);\n        props = this.props;\n        console.log(this.props);\n    }\n\n    getValue(key: any) {\n        const data = _.find(this.props.fields, ['name', key]);\n        console.log(\"data is:\", data);\n        if (data && data.value) {\n            return (key === 'collectionDate') ? moment(data.value).format('DD/MM/YYYY') : (key === 'collectionBranch' && data.value && data.value.label) ? data.value.label : data.value;\n        }\n        return '-';\n    }\n\n    render() {\n        const { t }: any = this.props;\n        this.fields = _.reject(this.props.fields, 'hide');\n        return (\n            <div className='review-booking'>\n                <div className=\"title\">Review Order Details</div>\n                <div className='prop-list'>\n                    {\n                        this.fields.map((pf: any) => (\n                            <div className='prop-li'>\n                                <div className='pl-label'>{t(`forms.${pf.label.replace(' ', '')}`)}</div>\n                                <div className='pl-divider'>:</div>\n                                <div className='pl-value'>{this.getValue(pf.name) || '-'}</div>\n                            </div>\n                        ))\n\n                    }\n                    <div className='prop-li'>\n                        <div className='pl-label'>{t('forms.Quantity')}</div>\n                        <div className='pl-divider'>:</div>\n                        <div className='pl-value'>\n                            <div className=\"ant-form-text\">1</div>\n                            <div className=\"ant-form-text\">{t('forms.QuantityText')}</div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\nconst ReviewBookingTranslated: any = withTranslation()(ReviewBooking);\nexport default ReviewBookingTranslated;","import { Component } from \"react\";\nimport { Modal, Button, Empty } from 'antd';\nimport { withTranslation } from 'react-i18next';\nimport { CommonHttpService } from \"../services/common-http.service\";\n\nclass ModalComponent extends Component {\n    props: any = this.props;\n    state = { isModalVisible: false };\n    service = new CommonHttpService();\n\n    componentWillUnmount() {\n        this.setState({ isModalVisible: false });\n    }\n\n    render() {\n        const { t }: any = this.props;\n        return (\n            <Modal visible={this.props.visible} onCancel={() => this.props.onChange(false)} footer={[\n                <Button key=\"submit\" type=\"primary\" onClick={() => this.props.onChange(false)}>\n                    {t('modal.okbutton')}\n                </Button>\n            ]}>\n                <div className='modal-content-data'>\n                    {\n                        (this.props.method === 'info' || this.props.method === 'error' || this.props.method === 'success') &&\n                        // Method: 'info' | 'error' | 'success'\n                        <Empty image={`${this.service.baseURL}/images/modal/${this.props.method}.svg`} description={false} />\n                    }\n                    {\n                        this.props.title &&\n                        <div className=\"modal-title\">\n                        {this.props.title}\n                    </div>\n                    }\n                    {\n                        this.props.message.map((pm: any) => (\n                            <div className=\"modal-message\">\n                                {pm}\n                            </div>\n                        ))\n                    }\n                </div>\n            </Modal>\n        );\n    }\n}\nconst ModalComponentTranslated: any = withTranslation()(ModalComponent);\nexport default ModalComponentTranslated;","import './new-booking.scss';\n\nimport { Layout, Button, Row, Space } from 'antd';\nimport { ArrowLeftOutlined, ArrowRightOutlined } from '@ant-design/icons';\nimport { Component } from 'react';\nimport FormsTranslated from '../../form/form';\nimport ReviewBookingTranslated from '../review-booking/review-booking';\nimport { withTranslation } from 'react-i18next';\nimport { CommonHttpService } from '../../../services/common-http.service';\nimport ModalComponentTranslated from '../../modal';\nimport * as _ from 'lodash';\nimport moment from 'moment'\n\nconst { Footer } = Layout;\n\nconst formControls = [\n    { label: 'Title', name: 'title', value: null, required: true, touched: false },\n    { label: 'Last Name', name: 'lastName', value: null, required: true, touched: false },\n    { label: 'Mobile Number', name: 'mobileNumber', value: null, required: true, touched: false },\n    { label: 'Collection Branch', name: 'collectionBranch', value: null, required: true, touched: false },\n    { label: 'Collection Date', name: 'collectionDate', value: null, required: true, touched: false },\n    { label: 'Collection Timeslot', name: 'collectionTimeslot', value: null, required: true, touched: false },\n    { label: 'Declaration', name: 'declaration', info: false, termsCondition: false, required: true, touched: false, hide: true }\n]\n\nclass NewBooking extends Component {\n    form: any;\n    state = { navigate: false, bookingProgress: false, status: null, refNo: '', fields: _.cloneDeep(formControls), orderStatus: \"change\", showModal: false, modalMsg: null, modalMethod: null };\n    props: any = this.props;\n    service = new CommonHttpService();\n    constructor(props?: any) {\n        super(props);\n        props = this.props;\n        console.log(\"lanaguge:\" + this.props.lang)\n        console.log(\"uuid:\" + this.props.uuid)\n        this.setState({ fields: this.props.fields });\n    }\n\n    componentWillUnmount() {\n        // this.setState({ fields: formControls, orderStatus: \"change\" });\n    }\n\n    componentDidMount() {\n        // this.setState({ showModal: true, modalMethod: 'info' });\n        console.log(\"component mounted\");\n    }\n\n    getValue(key: any) {\n        const data: any = _.find(this.state.fields, ['name', key]);\n        console.log(\"data is:\", data);\n        if (data && data.value) {\n            return (key === 'collectionDate') ? moment(data.value).format('DD/MM/YYYY') : (key === 'collectionBranch' && data.value && data.value.label) ? data.value.label : data.value;\n\n        }\n        return '-';\n    }\n\n    getBranchCode(key: any) {\n        console.log(\"data for branch code:\", this.state.fields)\n        const data: any = _.find(this.state.fields, ['name', key]);\n        console.log(\"data is:\", data);\n        if (data && data.value) {\n            return (key === 'collectionBranch') ? data.value.value : '-';\n        }\n        return '-';\n    }\n\n    get disableButton(): boolean {\n        const overallvalidation: boolean = (!!_.find(this.state.fields, ['value', null]) || !!_.find(this.state.fields, ['value', undefined]));\n        const mobileNumber: any = _.find(this.state.fields, ['name', 'mobileNumber']);\n        const mobileNumberValidation: boolean = ((mobileNumber.value && mobileNumber.value.length !== 8) || !Number(mobileNumber.value));\n        const declaration: any = _.find(this.state.fields, ['name', 'declaration']);\n        const declarationValidation: boolean = !declaration.info || !declaration.termsCondition;\n        console.log(declarationValidation);\n        return overallvalidation || mobileNumberValidation || declarationValidation;\n    }\n\n    submitOrder() {\n        this.setState({ status: null });\n        this.setState({ bookingProgress: true });\n        this.setState({ modalMethod: null });\n        let validateCaptcha = {\n            \"data\":\n            {\n                \"id\": 0,\n                \"type\": \"APPOINTMENT\",\n                \"attributes\": {\n                    \"unique-id\": this.props.uuid,\n                    \"branch-code\": this.getBranchCode('collectionBranch'),\n                    \"title\": this.getValue('title'),\n                    \"appointment-slot\": this.getValue('collectionTimeslot'),\n                    \"last-name\": this.getValue('lastName'),\n                    \"mobileNo\": '852' + this.getValue('mobileNumber'),\n                    \"appointment-date\": this.getValue('collectionDate'),\n                    \"quantity\": 1,\n                    \"booked-date\": moment().format('YYYY-MM-DD HH:mm:ss.SSS'),\n                    \"status\": 'booked',\n                    \"language-code\": this.props.lang,\n                    \"branch-name\": this.getValue('collectionBranch'),\n                    \"ref-id\": this.props.uuid\n                }\n            }\n        };\n        this.service.post('', validateCaptcha, this.props.uuid, this.props.lang).then((result) => {\n            this.setState({ bookingProgress: false });\n            this.setState({\n                status: result.status,\n            });\n            return result.json();\n        }).then((response) => {\n            console.log(\"result.status:\", this.state.status + \", ref\", response['tp-ref'])\n            if (this.state.status === 404) {\n                console.log(\"the error code:\", response['code'])\n                if(response['code']!==undefined && response['code']==='FORMS-API-CNYNOTES001'){\n                    this.setState({ showModal: true });\n                    this.setState({ modalMethod: 'error' });\n                    this.setState({ modalMsg: \"booking_duplicatemobile\" });\n                    this.setState({ refNo: '' });\n                }else if(response['code']!==undefined && response['code']==='FORMS-API-CNYNOTES003'){\n                    this.setState({ showModal: true });\n                    this.setState({ modalMethod: 'error' });\n                    this.setState({ modalMsg: \"booking_noslotavaialble\" });\n                    this.setState({ refNo: '' });\n                }\n            } else if (this.state.status === 200) {\n                this.setState({ modalMethod: 'success' });\n                this.setState({ showModal: true });\n                this.setState({ modalMsg: \"booking_success\" });\n                this.setState({ refNo: response['tp-ref'] });\n            } else {\n\n            }\n        }).catch((error) => {\n            this.setState({ modalMethod: 'error' });\n            this.setState({ showModal: true });\n            this.setState({ modalMsg: \"cancel_failure\" });\n        });\n    }\n\n    reviewOrder(fields: any) {\n        this.setState({ orderStatus: 'review' });\n    }\n\n    backToChange() {\n        this.setState({ orderStatus: 'change' });\n    }\n\n    modalClosed(event: any) {\n        this.setState({ fields: _.cloneDeep(formControls), showModal: event });\n        this.backToChange();\n    }\n\n    render() {\n        const { t }: any = this.props;\n        return (\n            <span>\n                {\n                    this.state.bookingProgress &&\n                    <div id=\"loader\" className=\"loader\"></div>\n                }\n                {\n                    this.state.orderStatus === 'change' &&\n                    <FormsTranslated {...this.props} form={this.form} fields={this.state.fields} onChange={(newFields: any) => { this.setState({ fields: newFields }); }} />\n                }\n                {\n                    this.state.orderStatus === 'review' &&\n                    <ReviewBookingTranslated fields={this.state.fields} />\n                }\n                <Footer>\n                    <Row className='footer-row'>\n                        {\n                            this.state.orderStatus === 'review' &&\n                            <Space align='end'>\n                                <Button danger type='primary' icon={<ArrowLeftOutlined />} onClick={() => this.backToChange()}>{t('new_booking.button.back')}</Button>\n                                <Button className='review-btn' disabled={this.disableButton} type='primary' icon={<ArrowRightOutlined />} onClick={() => this.submitOrder()}>{t('new_booking.button.submit')}</Button>\n                            </Space>\n                        }\n                        {\n                            this.state.orderStatus === 'change' &&\n                            <Space align='end'>\n                                <Button className='submit-btn' disabled={this.disableButton} type='primary' icon={<ArrowRightOutlined />} onClick={() => this.reviewOrder(this.state.fields)}>{t('new_booking.button.review')}</Button>\n                            </Space>\n                        }\n                    </Row>\n                </Footer>\n                <ModalComponentTranslated\n                    visible={this.state.showModal}\n                    // title={'Are you Sure?'}\n                    message={[this.state.modalMsg ? t('new_booking.' + this.state.modalMsg) : null, this.state.refNo ? `${t('new_booking.refnumber')}: ${this.state.refNo}` : null]}\n                    // Method: 'info' | 'error' | 'success'\n                    method={this.state.modalMethod}\n                    onChange={(event: any) => this.modalClosed(event)}></ModalComponentTranslated>\n            </span>\n        );\n    }\n}\n\nconst NewBookingTranslated = withTranslation()(NewBooking);\nexport default NewBookingTranslated;","import './update-booking.scss';\n\nimport { Component } from \"react\";\nimport { Button, Empty, Form, Input, Space, Table } from 'antd';\nimport { ArrowRightOutlined } from '@ant-design/icons';\nimport { withTranslation } from 'react-i18next';\nimport { CommonHttpService } from '../../../services/common-http.service';\nimport * as _ from 'lodash';\nimport ModalComponentTranslated from '../../modal';\n\nvar dateFormat = require('dateformat');\n\n\nclass UpdateBooking extends Component {\n    state = { cancellationDone: false, modalMsg: '', refNo: '', modalMethod: null, showModal: false, mobile: '', mobileNumber: '', rowSelected: false, selectedRowKeys: [], selectedRows: [], mobileSearch: null, loadingAppointment: false, appointmentData: null, status: null };\n    service = new CommonHttpService();\n\n\n    componentWillMount() {\n        console.log(\"tereeeee\");\n        this.setState({ appointmentData: null });\n        this.setState({ selectedRows: null });\n        this.setState({ selectedRowKeys: null });\n        this.setState({ rowSelected: false });\n    }\n\n    componentDidUnMount() {\n        console.log(\"testsss....\");\n        this.setState({ appointmentData: null });\n        this.setState({ selectedRows: null });\n        this.setState({ selectedRowKeys: null });\n        this.setState({ rowSelected: false });\n    }\n\n\n    getAppointments() {\n        this.setState({ loadingAppointment: true });\n        this.setState({ appointmentData: null });\n        this.setState({ refNo: '' });\n        this.rowSelection = {\n            selectedRowKeys: [],\n            onChange: this.onSelectChange\n        }\n        let getAppointmentData = {\n            \"data\":\n            {\n                \"id\": 0,\n                \"type\": \"APPOINTMENT\",\n                \"attributes\": { \"unique-id\": this.props.uuid, \"mobileNo\": '852' + this.state.mobileNumber }\n            }\n        };\n        this.service.post('/appointments', getAppointmentData, this.props.uuid, this.props.lang).then(res => {\n            this.setState({\n                status: res.status,\n            });\n            return res.json();\n        }).then((response) => {\n            this.setState({ mobile: '' });\n            if (this.state.status === 200) {\n                this.setState({ loadingAppointment: false });\n                _.each(response, (el: any) => {\n                    el[\"appointmentdate\"] = dateFormat(el[\"appointment-date\"], \"dd-mm-yyyy\")\n                    el[\"appointment-date\"] = dateFormat(el[\"appointment-date\"], \"dd/mm/yyyy\")\n                })\n                this.setState({ appointmentData: response });\n            } else {\n                this.setState({ loadingAppointment: false });\n                this.setState({ modalMethod: 'error', showModal: true });\n                this.setState({ modalMsg: \"cancel_failure\" });\n            }\n        }).catch((error) => {\n            this.setState({ loadingAppointment: false });\n            this.setState({ modalMethod: 'error', showModal: true });\n            this.setState({ modalMsg: \"cancel_failure\" });\n        });\n    }\n\n    cancelAppointment() {\n        this.setState({ loadingAppointment: true });\n        this.setState({ cancellationDone: false });\n        this.setState({ modalMethod: null });\n        this.setState({ refNo: '' });\n        let cancelAppointment = {\n            \"data\":\n            {\n                \"id\": 0,\n                \"type\": \"CANCELATION\",\n                \"attributes\": this.state.selectedRows[0]\n            }\n        } as any;\n        delete cancelAppointment.data.attributes['booked-date']\n        cancelAppointment.data.attributes['unique-id'] = this.props.uuid;\n        cancelAppointment.data.attributes['id'] = 0;\n        cancelAppointment.data.attributes['status'] = 'cancelled';\n        cancelAppointment.data.attributes['language-code'] = this.props.lang;\n        this.service.post('', cancelAppointment, this.props.uuid, this.props.lang).then((result) => {\n            this.setState({ verifyButtonLoader: false });\n            console.log(\"result.status:\" + result.status)\n            if (result.status === 200) {\n                this.setState({ loadingAppointment: false });\n                this.setState({ modalMethod: 'success', showModal: true });\n                this.setState({ modalMsg: \"cancel_success\" });\n                this.setState({ rowSelected: true });\n                this.setState({ cancellationDone: true });\n                this.setState({ refNo: cancelAppointment.data.attributes['ref-id'] });\n            } else {\n                this.setState({ loadingAppointment: false });\n                this.setState({ showModal: true });\n                this.setState({ modalMethod: 'error', showModal: true });\n                this.setState({ modalMsg: \"cancel_failure\" });\n            }\n        }).catch((error) => {\n            this.setState({ loadingAppointment: false });\n            this.setState({ modalMethod: 'error', showModal: true });\n            this.setState({ modalMsg: \"cancel_failure\" });\n        });\n    }\n\n    onSelectChange = (selectedRowKeys: any, selectedRows: any) => {\n        console.log(\"selectedRows:\", selectedRows[0]);\n        this.setState({ selectedRowKeys });\n        this.setState({ selectedRows });\n        this.setState({ rowSelected: true });\n        this.rowSelection.selectedRowKeys = selectedRowKeys;\n    };\n\n    rowSelection = {\n        selectedRowKeys: [],\n        onChange: this.onSelectChange\n    };\n\n\n    validate(e: any) {\n        const re = /^[0-9\\b]+$/;\n        if (e.target.value === '' || re.test(e.target.value)) {\n            this.setState({ mobile: e.target.value })\n            this.setState({ mobileNumber: e.target.value })\n            this.setState({ rowSelected: false });\n        }\n    }\n\n    modalClosed(event: any) {\n        this.setState({ showModal: event });\n        if (this.state.cancellationDone) { // call get appointments only after cancellation is success\n            this.getAppointments();\n        }\n    }\n\n    get disableButton(): boolean {\n        return ((this.state.mobile && this.state.mobile.length !== 8) || !Number(this.state.mobile));\n    }\n\n    props: any = this.props;\n    constructor(props?: any) {\n        super(props);\n        props = this.props;\n        console.log(\"lanaguge:\" + this.props.lang)\n        console.log(\"uuid:\" + this.props.uuid)\n        this.validate = this.validate.bind(this);\n    }\n    columns = [\n        {\n            title: 'Collection Date',\n            dataIndex: 'appointmentdate'\n        },\n        {\n            title: 'Collection Branch',\n            dataIndex: 'branch-name'\n        },\n        {\n            title: 'Collection Timeslot',\n            dataIndex: 'appointment-slot'\n        },\n        {\n            title: 'Reference Number',\n            dataIndex: 'ref-id'\n        }\n    ];\n\n    data: any = [];\n\n\n    render() {\n        const { t }: any = this.props;\n        return (\n            <div>\n                <Form className='update-booking' layout=\"horizontal\">\n                    <Space direction=\"vertical\">\n                        <Form.Item name='mobileNumber' label={t('update_booking.mobile')}>\n                            <Input.Group compact>\n                                <Input className='country-code' disabled={true} size=\"large\" defaultValue=\"852\" />\n                                <Input className='mobile-number' size=\"large\" maxLength={8} placeholder={t('update_booking.mobile')} value={this.state.mobile} onChange={this.validate} autoFocus onPressEnter={() => this.getAppointments()} />\n                            </Input.Group>\n                        </Form.Item>\n                        <div className='buttons'>\n                            {\n                                !this.state.rowSelected &&\n                                <Button className='submit-btn' type=\"primary\" disabled={this.disableButton} icon={<ArrowRightOutlined />} onClick={() => this.getAppointments()}>{t('update_booking.button')}</Button>\n                            }\n                            {\n                                this.state.rowSelected &&\n                                <Button className='submit-btn' type=\"primary\" icon={<ArrowRightOutlined />} onClick={() => this.cancelAppointment()}>{t('update_booking.cancelbutton')}</Button>\n                            }\n                        </div>\n                    </Space>\n                </Form>\n                {\n                    this.state.loadingAppointment &&\n                    <div id=\"loader\" className=\"loader\"></div>\n                }\n                {\n                    this.state.appointmentData !== null &&\n                    // <Table locale={{ emptyText: t('update_booking.norecordfound') + '852' + this.state.mobileNumber }} rowSelection={{ type: 'radio', ...this.rowSelection }} columns={this.columns} dataSource={this.state.appointmentData} size=\"small\" bordered />\n                    <Table locale={{ emptyText: (<Empty description={`${t('update_booking.norecordfound')} 852-${this.state.mobileNumber}`}></Empty>) }} rowSelection={{ type: 'radio', ...this.rowSelection }} columns={this.columns} dataSource={this.state.appointmentData} size=\"small\" bordered />\n                }\n                <ModalComponentTranslated\n                    visible={this.state.showModal}\n                    // title={'Are you Sure?'}\n                    message={[this.state.modalMsg ? t('update_booking.' + this.state.modalMsg) : null, this.state.refNo ? `${t('new_booking.refnumber')}: ${this.state.refNo}` : null]}\n                    // Method: 'info' | 'error' | 'success'\n                    method={this.state.modalMethod}\n                    onChange={(event: any) => this.modalClosed(event)}></ModalComponentTranslated>\n            </div>\n        );\n    }\n}\nconst UpdateBookingTranslated = withTranslation()(UpdateBooking);\nexport default UpdateBookingTranslated;","import './tab.scss';\n\nimport { Layout, Tabs } from 'antd';\nimport NewBooking from './new-booking/new-booking';\nimport UpdateBooking from './update-booking/update-booking';\nimport { withTranslation } from 'react-i18next';\nimport { Component } from 'react';\n\nconst { Header, Content } = Layout;\nconst { TabPane } = Tabs;\n\n\nclass Tab extends Component {\n    props: any = this.props;\n    constructor(props?: any) {\n        super(props);\n        props = this.props;\n    }\n\n    state = { tabChange: false };\n\n    render() {\n        const { t }: any = this.props;\n        return (\n            <Layout>\n                <Header>\n                    <div className='header'>{t('new_booking.header')}</div>\n                    <div className='hint'>{t('new_booking.hint')}</div>\n                </Header>\n                <Content>\n                    <Tabs defaultActiveKey=\"new\" onChange={(event: any) => this.setState({ tabChange: event === 'new' })}>\n                        <TabPane tab={t('tab.new_booking')} key=\"new\">\n                            <NewBooking {...this.props} tabChange={this.state.tabChange} />\n                        </TabPane>\n                        <TabPane tab={t('tab.update_booking')} key=\"cancellationAndEnquiries\">\n                            <UpdateBooking {...this.props} />\n                        </TabPane>\n                    </Tabs>\n                </Content>\n            </Layout>\n        );\n    }\n}\n\nconst TabTranslated = withTranslation()(Tab);\n\nexport default TabTranslated;","import { Component } from 'react';\nimport { withTranslation } from 'react-i18next';\nimport './important-notes.scss';\n\nclass ImportantNotes extends Component {\n    render() {\n        const { t }: any = this.props;\n        return (\n            <div className='important-notes'>\n                <div className=\"title\">{t('importantNotes.title')}</div>\n                <ol>\n                    <li>{t(`importantNotes.1`)}</li>\n                    <li>{t(`importantNotes.2`)}</li>\n                    <li>{t(`importantNotes.3`)}</li>\n                    <li>{t(`importantNotes.4`)}</li>\n                    <li>{t(`importantNotes.5`)}</li>\n                    <li>{t(`importantNotes.6`)}</li>\n                    <li>{t(`importantNotes.7`)}</li>\n                </ol>\n            </div>\n        )\n    }\n}\n\nconst ImportantNotesTranslated = withTranslation()(ImportantNotes);\n\nexport default ImportantNotesTranslated;","import './Captcha.scss';\r\nimport { Component } from \"react\";\r\nimport { Button,  Input, Layout } from 'antd';\r\nimport { GlobalOutlined, ReloadOutlined } from '@ant-design/icons';\r\nimport { withTranslation } from 'react-i18next';\r\nimport i18n from '../../wrappers/i18n/i18n';\r\nimport { CommonHttpService } from '../../services/common-http.service';\r\nimport TabTranslated from '../tab/tab';\r\nimport ImportantNotesTranslated from '../important-notes/important-notes';\r\nconst { Header, Content } = Layout;\r\n\r\nrequire('dotenv').config();\r\n\r\n\r\nclass Captcha extends Component {\r\n    state: any = { navigate: false, captchaInput: '', verifyButtonLoader: false, reloadCaptchaLoader: false, captcha: null, lang: 'en', message: null };\r\n    service = new CommonHttpService();\r\n    constructor(props?: any) {\r\n        super(props);\r\n        this.changeLanguageHandler('en');\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getStatus();\r\n    }\r\n\r\n    changeLanguageHandler(lang: any) {\r\n        this.setState({ lang });\r\n        this.service.setLanguage(lang);\r\n        i18n.changeLanguage(lang);\r\n    }\r\n\r\n    getStatus() {\r\n        this.service.get('/servicecheck', this.state.uuid, this.state.lang).then((result) => {\r\n            console.log(\"param value:\", result.paramValue)\r\n            if (result.paramValue === undefined) {\r\n                this.setState({ message: \"Error\" });\r\n            } else {\r\n                this.setState({ message: result.paramValue });\r\n            }\r\n            if (result.paramValue && result.paramValue.toLowerCase() === 'Up'.toLowerCase()) {\r\n                this.refreshCaptcha();\r\n            }\r\n        }).catch((error) => {\r\n            this.setState({ message: \"Error\" });\r\n        })\r\n    }\r\n\r\n    refreshCaptcha() {\r\n        this.setState({ reloadCaptchaLoader: true });\r\n        this.setState({ captchainvalid: false });\r\n        this.setState({ captchaInput: \"\" });\r\n        this.setState({ captcha: null });\r\n        this.service.get('/captcha', this.state.uuid, this.state.lang).then((result) => {\r\n            this.setState({ reloadCaptchaLoader: false });\r\n            this.setState({ captcha: result.data.captcha });\r\n            this.setState({ uuid: result.data.uuid });\r\n            this.service.setUUID(result.data.uuid);\r\n        }).catch((error) => {\r\n            this.setState({ reloadCaptchaLoader: false });\r\n            this.setState({ captcha: null });\r\n            this.setState({ message: \"Error\" });\r\n        })\r\n    }\r\n\r\n    validate(e: any) {\r\n        console.log(\"test in validate\" + e.target.value.toUpperCase());\r\n        const re = /^[0-9a-zA-Z\\b]+$/;\r\n        if (e.target.value === '' || re.test(e.target.value)) {\r\n            this.setState({ captchaInput: e.target.value.toUpperCase() })\r\n        }\r\n    }\r\n\r\n    verifyCaptcha() {\r\n        this.setState({ verifyButtonLoader: true });\r\n        let validateCaptcha = {\r\n            \"data\":\r\n            {\r\n                \"id\": 0,\r\n                \"type\": \"CAPTCHAVALIDATION\",\r\n                \"attributes\": { \"unique-id\": this.state.uuid, \"captha-answer\": this.state.captchaInput }\r\n            }\r\n        };\r\n        this.service.post('/captcha', validateCaptcha, this.state.uuid, this.state.lang).then((result) => {\r\n            this.setState({ verifyButtonLoader: false });\r\n            console.log(\"result.status:\" + result.status)\r\n            if (result.status === 404) {\r\n                this.setState({ navigate: false });\r\n                this.setState({ captchainvalid: true });\r\n                this.setState({ captchaInput: \"\" });\r\n            } else if (result.status === 200) {\r\n                this.setState({ navigate: true });\r\n            } else {\r\n                this.setState({ navigate: false });\r\n                this.setState({ captchainvalid: true });\r\n                this.setState({ captchaInput: \"\" });\r\n            }\r\n        }).catch((error) => {\r\n            this.setState({ captcha: null });\r\n            this.setState({ message: \"Error\" });\r\n            this.setState({ verifyButtonLoader: false });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { t }: any = this.props;\r\n        console.log(this.state)\r\n        let propsdata = {\r\n            lang: this.state.lang,\r\n            uuid: this.state.uuid\r\n        }\r\n        if (this.state.navigate) {\r\n            return (\r\n                <TabTranslated {...propsdata} />\r\n            );\r\n        }\r\n        return (\r\n            <Layout className=\"captcha\">\r\n               <Header>\r\n               <img className='sc-logo' src={`${this.service.baseURL}/images/sc-logo.svg`} alt=\"Logo\" />\r\n               <img className='sc-mobile-logo' src={`${this.service.baseURL}/images/sc-mobile-logo.svg`} alt=\"Logo\" />\r\n                    <div className='border'>\r\n                        <div className='border-top'></div>\r\n                        <div className='border-bottom'></div>\r\n                    </div>\r\n                    <div className='header-title'>{t('new_booking.header')}\r\n                    <Button icon={<GlobalOutlined />} shape=\"round\" className='lang' onClick={() => this.changeLanguageHandler(this.state.lang === 'en' ? 'zh' : 'en')}>{t(`captcha.selectOptions.${this.state.lang === 'en' ? 'English' : 'Chinese'}`)}</Button>\r\n                    </div>\r\n                </Header>\r\n                <Content>\r\n                    <ImportantNotesTranslated />\r\n                    <div className=\"captcha-validation\">\r\n                        {\r\n                            !this.state.message &&\r\n                            <div id=\"loader\" className=\"loader\"></div>\r\n                        }\r\n                        {/* Technical Error */}\r\n                        {\r\n                            this.state.message && this.state.message.toLowerCase() === 'Error'.toLowerCase() &&\r\n                            <div className='header'>{t('captcha.TechnicalError')}</div>\r\n                        }\r\n                        {/* System Maintenance */}\r\n                        {\r\n                            this.state.message && this.state.message.toLowerCase() === 'Maintenance'.toLowerCase() &&\r\n                            <div className='header'>{t('captcha.Maintenance')}</div>\r\n                        }\r\n                        {/* Thank You */}\r\n                        {\r\n                            this.state.message && this.state.message.toLowerCase() === 'Thankyou'.toLowerCase() &&\r\n                            <div className='header'>{t('captcha.Thankyou')}</div>\r\n                        }\r\n                        {\r\n                            this.state.message && this.state.message.toLowerCase() === 'Up'.toLowerCase() &&\r\n                            <div className=\"block\">\r\n                                <div>{t('captcha.header')}</div>\r\n                                {\r\n                                    this.state.reloadCaptchaLoader && !this.state.captcha &&\r\n                                    <div id=\"loader\" className=\"loader\"></div>\r\n                                }\r\n                                {\r\n                                    !this.state.reloadCaptchaLoader && this.state.captcha &&\r\n                                    <div className='captcha-img'>\r\n                                        <img src={'data:image/png;base64,' + this.state.captcha} alt=\"Captcha\" />\r\n                                        <Button className='img-reload' shape=\"circle\" icon={<ReloadOutlined />} onClick={() => this.refreshCaptcha()}></Button>\r\n                                    </div>\r\n                                }\r\n\r\n                                <Input placeholder={t('captcha.placeholder')} size=\"large\" maxLength={6} value={this.state.captchaInput} autoFocus onChange={(e) => { this.validate(e); }} onPressEnter={() => this.verifyCaptcha()} />\r\n                                {\r\n                                    !this.state.reloadCaptchaLoader && this.state.captcha && this.state.captchainvalid &&\r\n                                    <div className='captcha-error'>\r\n                                        {t('captcha.Error')}\r\n                                    </div>\r\n                                }\r\n                                <Button block disabled={this.state.captchaInput?.length !== 6} onClick={() => this.verifyCaptcha()}>{t('captcha.button')}</Button>\r\n                                {\r\n                                    this.state.verifyButtonLoader &&\r\n                                    <div id=\"loader\" className=\"loader\"></div>\r\n                                }\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                </Content>\r\n            </Layout>\r\n        )\r\n    }\r\n}\r\nconst CaptchaTranslated = withTranslation()(Captcha);\r\nexport default CaptchaTranslated;","import './App.scss';\n\nimport { Component } from 'react';\nimport Tab from './components/tab/tab';\nimport Captcha from './components/captcha/Captcha';\n\nimport { HashRouter, Redirect, Route } from 'react-router-dom';\n\nclass App extends Component {\n  render() {\n    return (\n      <HashRouter>\n        <Route path=\"/captcha\" component={Captcha} />\n        <Route path=\"/booking\" component={Tab} />\n        <Redirect to=\"/captcha\" />\n      </HashRouter>\n    );\n  }\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport \"./wrappers/i18n/i18n\";\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}