{"version":3,"sources":["wrappers/i18n/i18n.tsx","wrappers/i18n/en.tsx","wrappers/i18n/zh.tsx","services/common-http.service.tsx","components/form/form.tsx","components/tab/review-booking/review-booking.tsx","components/modal.tsx","components/tab/new-booking/new-booking.tsx","components/tab/update-booking/update-booking.tsx","components/tab/tab.tsx","components/important-notes/important-notes.tsx","components/captcha/Captcha.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["resources","en","translation","captcha","header","placeholder","button","selectOptions","English","Chinese","TechnicalError","Maintenance","Thankyou","Error","tab","new_booking","update_booking","importantNotes","title","hint","back","submit","review","refnumber","booking_success","mobile","email","cancelbutton","cancel_success","norecordfound","forms","modal","review_orders","response","zh","i18n","use","initReactI18next","init","lng","navigator","language","require","config","APPURL","process","CommonHttpService","uuid","url","lang","console","log","this","fetch","method","headers","then","json","body","JSON","stringify","SC_CLIENT_CONTEXT","uuidv4","changeLanguage","OptGroup","Select","Option","Forms","props","form","validationMessages","state","datesLoaded","selectedDate","selectedTimeSlot","datesLoading","info","termsCondition","branchList","branchSelected","dateList","collectionTimeSlots","validation","service","allFields","fields","getBranchList","setState","getValue","get","res","getDateList","catch","err","event","value","data","slots","date","_","format","status","slotTime","e","field","prop","fieldData","label","onChange","touched","target","test","key","length","Number","t","className","id","layout","Item","name","size","defaultValue","onFocus","setTouched","onBlur","setData","getMessage","maxLength","Group","compact","disabled","validate","labelInValue","Object","entries","map","k","v","d","code","chineseName","disabledDate","getTimeSlots","style","width","dt","direction","checked","Component","FormsTranslated","withTranslation","ReviewBooking","selectedRowKeys","mobileSearch","loadingAppointment","appointmentData","find","moment","reject","pf","replace","ReviewBookingTranslated","ModalComponent","isModalVisible","visible","onCancel","footer","type","onClick","image","description","message","pm","ModalComponentTranslated","Footer","Layout","formControls","required","hide","NewBooking","navigate","bookingProgress","refNo","orderStatus","showModal","modalMsg","modalMethod","overallvalidation","undefined","mobileNumber","mobileNumberValidation","declaration","declarationValidation","validateCaptcha","getBranchCode","post","result","error","backToChange","newFields","align","danger","icon","ArrowLeftOutlined","disableButton","ArrowRightOutlined","submitOrder","reviewOrder","modalClosed","NewBookingTranslated","dateFormat","UpdateBooking","rowSelected","selectedRows","onSelectChange","rowSelection","columns","dataIndex","bind","getAppointmentData","el","cancelAppointment","attributes","verifyButtonLoader","getAppointments","autoFocus","onPressEnter","locale","emptyText","dataSource","bordered","UpdateBookingTranslated","Header","Content","TabPane","Tabs","Tab","tabChange","defaultActiveKey","TabTranslated","ImportantNotes","ImportantNotesTranslated","Captcha","captchaInput","reloadCaptchaLoader","changeLanguageHandler","getStatus","setLanguage","paramValue","toLowerCase","refreshCaptcha","captchainvalid","setUUID","toUpperCase","propsdata","src","alt","GlobalOutlined","shape","ReloadOutlined","verifyCaptcha","block","CaptchaTranslated","App","path","component","to","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.aa9cfbba.chunk.js","sourcesContent":["import i18n from \"i18next\";\nimport { initReactI18next } from \"react-i18next\";\nimport en from \"./en\";\nimport zh from \"./zh\";\n\nexport interface I18NConfig {\n  user: {\n    login: String;\n    signup: String;\n    username_placeholder: String;\n    password_placeholder: String;\n    image_url: String;\n  };\n}\n\nconst resources = {\n  en: {\n    translation: en,\n  },\n  zh: {\n    translation: zh,\n  },\n};\n\ni18n\n  .use(initReactI18next)\n  .init({ resources: resources as any, lng: navigator.language });\n\nexport default i18n;","const en = {\n    captcha: {\n        header: 'Type the verification code (in Capital Letters)',\n        placeholder: 'Verification Code',\n        button: 'Verify to Proceed',\n        selectOptions: {\n            English: '中文',\n            Chinese: 'Chinese'\n        },\n        TechnicalError: 'This service is temporarily unavailable for system maintenance. Please try again later. Apologies for the'\n        +' inconvenience caused',\n        Maintenance: 'This service is temporarily unavailable for system maintenance. Please try again later. Apologies for the'\n        +' inconvenience caused',\n        Thankyou: 'Thank you for your interest for this service, however our new banknotes reservation are fully booked. Please visit our branches'\n        +' for assistance.',\n        Error: 'The verification code you entered is incorrect, please retry.'\n    },\n    tab: {\n        new_booking: 'Booking',\n        update_booking: 'Enquiry/Cancel'\n    },\n    importantNotes: {\n        title: 'Important Notes',\n        1: ' All Online Pre-orders, once submitted, cannot be amended.',\n        2: ' No express queue will be arranged for the collection of banknotes pre-ordered online.',\n        3: 'Clients, when collecting the banknote(s), may instruct the Bank to debit the total sum from the his/her personal bank account or by exchanging the same amount of old banknote(s) (in Hong Kong currency) at the collection counters.',\n        4: 'Clients must check the conditions of the banknote(s) at the counters of the Designated Collection Branch as shown above. Replacement of the banknote(s) will only be arranged if found damaged at the time of collection. Requests for replacement of the banknote(s) will not be accepted after the clients have left the collection counters.',\n        5: 'lf a client does not collect the banknote(s) at the Designated Collection Branch and on the Designated Collection Date, or fails to collect the banknote(s)in accordance with the terms and conditions provided, the Bank will not keep the banknote(s) for the client. The client shall be deemed to have forgone the right to collect the banknote(s) and that the Bank will dispose of the uncollected banknote(s) at its absolute discretion.',\n        6: 'Unless otherwise stated, any reference to a date in the terms and conditions only refers to the normal business hours of the Bank on such date, and does not include any time within which a tropical cyclone warning signal number 8 or above, a Black Rainstorm warning signal, is in force in Hong Kong.',\n        7: 'Every mobile number can only register for one pack of new banknotes per day.'\n    },\n    new_booking: {\n        header: 'Chinese New Year New Banknotes Booking',\n        hint: 'Please fill in the below ordering form to complete the registration',\n        button: {\n            back: 'Back',\n            submit: 'Submit',\n            review: 'Review Order'\n        },\n        refnumber: 'Your Reference Number is',\n        booking_success: 'Thanks for your submission of this pre-order form: A sms confirmation will be sent to your mobile number provided in this form.'\n    },\n    update_booking: {\n        mobile: 'Mobile Number',\n        email: 'Email Address',\n        button: 'Submit',\n        cancelbutton: 'Cancel Appointment',\n        cancel_success: 'Your selected booking has been cancelled. A sms confirmation will be sent to your mobile number provided in this form.',\n        norecordfound: 'No Appointments found for this mobile number : '\n    },\n    forms: {\n        'SelectPlaceholder': 'Please Select...',\n        'Title': 'Title',\n        'LastName': 'Last Name',\n        'MobileNumber': 'Mobile Number',\n        'CollectionBranch': 'Collection Branch',\n        'CollectionDate': 'Collection Date',\n        'CollectionTimeslot': 'Collection Timeslot',\n        'Quantity': 'Quantity',\n        'Declaration': 'Declaration',\n        'QuantityText': 'Total value per pack: HK$3,000. (Denomination: HK$20 x 100pcs, HK$50 x 20pcs)',\n        'DeclarationPoints': {\n            1: 'I confirm the above information is accurate to my knowledge. No amendment is allowed once the form is submitted',\n            2: 'I have read, understood and agreed to the terms and conditions of this application'\n        },\n        \"regionThree\": \"---- New Territories ---- \",\n        \"regionTwo\": \"---- Kowloon  ---- \",\n        \"regionOne\": \"---- Hong Kong ----\",\n        \"salutationOne\": \"Mr.\",\n        \"salutationTwo\": \"Mrs.\",\n        \"salutationThree\": \"Miss\",\n        'noslotsavailable': 'All slots are full please select different branch'\n\n    },\n    modal:{\n        'okbutton': 'Ok'\n    },\n    review_orders: {\n\n    },\n    response: {\n\n    }\n};\nexport default en;","const zh = {\n    captcha: {\n        header: '键入验证代码（大写字母)',\n        placeholder: '验证代码',\n        button: '验证继续',\n        selectOptions: {\n            English: 'EN',\n            Chinese: 'EN'\n        },\n        TechnicalError: '暫時未能提供服務，請稍後再試。如有不便，敬請原諒。',\n        Maintenance: '暫時未能提供服務，請稍後再試。如有不便，敬請原諒。',\n        Thankyou: '多謝閣下對此服務的興趣。 由於網上預訂鈔票反應熱烈，全部網上配額已被預訂。如需協助，請到臨我們的分行。',\n        Error: \"您所輸入的驗證碼不正確，請重新輸入。\"\n    },\n    tab: {\n        new_booking: '预订',\n        update_booking: '查询/取消'\n    },\n    importantNotes: {\n        title: '重要事項:',\n        1: '所有網上預定申請一經提交，不得修改。',\n        2: '指定領鈔分行並不會安排快捷櫃檯予客戶領取鈔票。',\n        3: '客戶可指示銀行從個人銀行賬戶中扣除全部兌換金額，或在櫃檯兌換相同數值的舊鈔票（港幣），從而領取鈔票。',\n        4: '客戶應在指定領鈔分行的櫃檯查看鈔票的狀況。更換鈔票只能在領鈔時發現損壞的情況下進行安排。客戶離開領鈔櫃檯後，本行將不接受更換鈔票的要求。',\n        5: '如客戶沒有在指定領鈔分行和指定日期領取鈔票，或未按照規定的條款和細則領取鈔票，本行將不會為客戶保留鈔票。客戶將被視為已經放棄收取鈔票的權利，本行將自行決定處置未領取的鈔票。',\n        6: '除另有說明外，凡於條款及細則內提及的日期，僅指本行於該日期的正常營業時間，並不包括當香港發出8號或以上熱帶氣旋警告信號或黑色暴雨警告信號時之任何時間。',\n        7: '每個手機號碼在每天只能預訂一套套裝新鈔票。'\n    },\n    new_booking: {\n        header: '網上預訂新鈔票',\n        hint: '请填写以下订购表以完成注册',\n        button: {\n            back: '返回',\n            submit: '提交',\n            review: '审核订单'\n        }\n    },\n    update_booking: {\n        mobile: '移动号码',\n        email: '电子邮件地址',\n        button: '提交'\n    },\n    forms: {\n        'SelectPlaceholder': 'Please Select...',\n        'Title': 'Title',\n        'LastName': 'Last Name',\n        'MobileNumber': 'Mobile Number',\n        'CollectionBranch': 'Collection Branch',\n        'CollectionDate': 'Collection Date',\n        'CollectionTimeslot': 'Collection Timeslot',\n        'Quantity': 'Quantity',\n        'Declaration': 'Declaration',\n        'QuantityText': 'Total value per pack: HK$3,000. (Denomination: HK$20 x 100pcs, HK$50 x 20pcs)',\n        'DeclarationPoints': {\n            1: 'I confirm the above information is accurate to my knowledge. No amendment is allowed once the form is submitted',\n            2: 'I have read, understood and agreed to the terms and conditions of this application'\n        },\n        \"regionThree\": \"---- New Territories ---- \",\n        \"regionTwo\": \"---- Kowloon  ---- \",\n        \"regionOne\": \"---- Hong Kong ----\"\n    },\n    modal:{\n        'okbutton': 'Ok'\n    },\n    review_orders: {\n\n    },\n    response: {\n\n    }\n};\nexport default zh;","import { Empty, Modal } from 'antd';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport i18n from '../wrappers/i18n/i18n';\r\n\r\nrequire('dotenv').config();\r\n\r\n\r\nconst APPURL = `${process.env.REACT_APP_HOST_URL || 'http://localhost:9090'}/origination/api/v3/cnynotes`;\r\nexport class CommonHttpService {\r\n    language: any;\r\n    uuid: any;\r\n    get(url: string, uuid: any, lang: any) {\r\n        console.log(\"language from captcha is:\" + this.language)\r\n        return fetch(`${APPURL}${url}`, {\r\n            method: 'GET',\r\n            headers: this.headers(uuid, lang)\r\n        }).then(response => response.json())\r\n    }\r\n\r\n    post(url: string, body: any, uuid: any, lang: any) {\r\n        console.log(\"language from captcha is:\" + this.language)\r\n        return fetch(`${APPURL}${url}`, {\r\n            method: 'POST',\r\n            headers: this.headers(uuid, lang),\r\n            body: JSON.stringify(body)\r\n        }).then(response => response)\r\n    }\r\n\r\n    headers(uuid: any, lang: any) {\r\n        let headers: any = {};\r\n        headers[\"Content-Type\"] = \"application/json\";\r\n        headers[\"Accept\"] = \"application/json\";\r\n        let SC_CLIENT_CONTEXT = {\r\n            \"reqId\": `${uuidv4()}`,\r\n            \"Channel\": \"Web\",\r\n            \"Country\": \"HK\",\r\n            \"Language\": lang,\r\n            \"AppName\": \"RCWB\",\r\n            \"ClientId\": \"WEB\",\r\n            \"RumDevice\": \"devicebrowserversion\",\r\n            \"appVersion\": \"1.0\",\r\n            \"userId\": uuid,\r\n            \"releaseVersion\": \"cnynotes\"\r\n        };\r\n        headers[\"SC-CLIENT-CONTEXT\"] = JSON.stringify(SC_CLIENT_CONTEXT);\r\n        return headers;\r\n    };\r\n\r\n    setLanguage(lang: string) {\r\n        this.language = lang;\r\n        i18n.changeLanguage(this.language);\r\n    }\r\n\r\n    setUUID(uuid: string) {\r\n        this.uuid = uuid;\r\n        i18n.changeLanguage(this.language);\r\n    }\r\n}","import './form.scss';\n\nimport { Form, Input, Select, DatePicker, Space, Checkbox } from 'antd';\nimport { Component } from 'react';\nimport { CommonHttpService } from '../../services/common-http.service';\nimport * as _ from 'lodash';\nimport { withTranslation } from 'react-i18next';\nconst { OptGroup, Option } = Select;\n\n\nclass Forms extends Component {\n    props: any = this.props;\n    form: any;\n    validationMessages: any = {};\n    state = { datesLoaded: false, selectedDate: null, selectedTimeSlot: null, datesLoading: false, info: false, termsCondition: false, mobile: '', branchList: {}, branchSelected: '', dateList: [], collectionTimeSlots: [], validation: this.validationMessages };\n    service = new CommonHttpService();\n\n    constructor(props?: any) {\n        super(props);\n        props = this.props;\n        console.log(\"uuid in constructor:\" + this.props.uuid)\n    }\n\n\n    componentDidMount() {\n        this.getBranchList();\n        this.setState({ mobile: this.getValue('mobileNumber') });\n    }\n\n    getBranchList() {\n        console.log(\"uuid is:\" + this.props.uuid)\n        this.service.get(`/branchlist/${this.props.uuid}`, this.props.uuid, this.props.lang).then((res) => {\n            this.setState({ branchList: res });\n            if (this.getValue('collectionBranch')) {\n                this.getDateList(this.getValue('collectionBranch'));\n            }\n        }).catch((err) => {\n            console.log(err);\n        });\n    }\n\n    getDateList(event: any) {\n        this.setState({ selectedDate: null })\n        this.setState({ selectedTimeSlot: null })\n        this.setState({ datesLoading: true })\n        this.service.get(`/slots/${event.value}/${this.props.uuid}`, this.props.uuid, this.props.lang).then((res) => {\n            this.setState({ datesLoading: false })\n            this.setState({ dateList: res.data.slots });\n            this.setState({ datesLoaded: true });\n            /*if (this.getValue('collectionDate')) {\n                this.setState({ selectedDate: this.getValue('collectionDate') });\n                this.getTimeSlots(this.getValue('collectionDate'));\n            }*/\n        }).catch((err) => {\n\t\t\tthis.setState({ datesLoading: false })\n            this.setState({ datesLoaded: true });\n            console.log(err);\n        });\n    }\n\n    disabledDate(event: any) {\n        const date: any = event ? _.find(this.state.dateList, ['slot-date', event.format('DD/MM/YYYY')]) : null;\n        return !date || (date && !date.status);\n    }\n\n    getTimeSlots(event: any) {\n        this.setState({ selectedTimeSlot: null })\n        const date: any = event ? _.find(this.state.dateList, ['slot-date', event.format('DD/MM/YYYY')]) : null;\n        if (date && date.status) {\n            this.setState({ collectionTimeSlots: date.slotTime });\n            /*if (this.getValue('collectionTimeSlot')) {\n                this.setState({ selectedTimeSlot: this.getValue('collectionTimeSlot') });\n            }*/\n        }\n    }\n\n    allFields: any = this.props.fields;\n\n    setData(e: any, field: any, prop?: any) {\n        const fieldData = _.find(this.allFields, ['name', field]);\n        if (field === 'declaration') {\n            fieldData[prop] = e;\n            this.setState({ [prop]: e });\n            this.validation(field, fieldData.label);\n            this.props.onChange(this.allFields);\n        } else if (fieldData) {\n            fieldData.value = e;\n            this.validation(field, fieldData.label);\n            this.props.onChange(this.allFields);\n            if(field==='collectionDate'){\n                this.setState({ selectedDate: e })\n            }if(field==='collectionTimeslot'){\n                this.setState({ selectedTimeSlot: e })\n            }\n        }\n        \n    }\n\n    setTouched(field: any) {\n        const fieldData = _.find(this.allFields, ['name', field]);\n        if (fieldData) {\n            fieldData.touched = true;\n            this.props.onChange(this.allFields);\n        }\n    }\n\n    validate(e: any) {\n        const re = /^[0-9\\b]+$/;\n        if (e.target.value === '' || re.test(e.target.value)) {\n            this.setState({ mobile: e.target.value })\n        }\n    }\n\n    getValue(key: string, prop?: string) {\n        const data = _.find(this.props.fields, ['name', key]);\n        if (data) {\n            const value = data[prop || 'value'] || null;\n            return value;\n        }\n        return null;\n    }\n\n    validation(field: any, title: any) {\n        const validation: any = this.state.validation;\n        if (!this.getValue(field)) {\n            if (field === 'declaration') {\n                if (!this.getValue(field, 'info') || !this.getValue(field, 'termsCondition')) {\n                    validation[field] = `${title} is required.`;    \n                } else {\n                    validation[field] = null;    \n                }\n            } else {\n                validation[field] = `${title} is required.`;\n            }\n        } else if (field === 'mobileNumber') {\n            if (this.getValue(field).length !== 8) {\n                validation[field] = `${title} should be 8 digits`;\n            } else if (!Number(this.getValue(field))) {\n                validation[field] = `${title} should not be 0`;\n            } else {\n                validation[field] = null;\n            }   \n        }else {\n            validation[field] = null;\n        }\n        this.setState({ validation });\n    }\n\n    getMessage(field: string) {\n        return this.state.validation[field] as string;\n    }\n\n    render() {\n        const { t }: any = this.props;\n        return (\n            <div className='form'>\n                {\n                    this.state.datesLoading &&\n                    <div id=\"loader\" className=\"loader\"></div>\n                }\n                <div className=\"title\">Order Details</div>\n                <Form layout=\"vertical\">\n                    <Form.Item name='title' label={t('forms.Title')}>\n                        <Select size=\"large\" placeholder={t('forms.SelectPlaceholder')} defaultValue={this.getValue('title')} onFocus={() => this.setTouched('title')} onBlur={() => this.validation('title', t('forms.Title'))} onChange={(e) => this.setData(e, 'title')}>\n                            <Option value=\"Mr.\">Mr.</Option>\n                            <Option value=\"Mrs.\">Mrs.</Option>\n                            <Option value=\"Miss\">Miss</Option>\n                        </Select>\n                        {\n                            this.getMessage('title') && <span className=\"field-error\">{this.getMessage('title')}</span>\n                        }\n                    </Form.Item>\n                    <Form.Item name='lastName' label={t('forms.LastName')}>\n                        <Input size=\"large\" maxLength={30} placeholder={t('forms.LastName')} defaultValue={this.getValue('lastName')} onFocus={() => this.setTouched('lastName')} onBlur={() => this.validation('lastName', t('forms.LastName'))} onChange={(e) => this.setData(e.target.value, 'lastName')} />\n                        {\n                            this.getMessage('lastName') && <span className=\"field-error\">{this.getMessage('lastName')}</span>\n                        }\n                    </Form.Item>\n                    <Form.Item name='mobileNumber' label={t('forms.MobileNumber')}>\n                        <Input.Group compact>\n                            <Input className='country-code' disabled={true} size=\"large\" defaultValue=\"852\" />\n                            <Input className='mobile-number' maxLength={8} size=\"large\" placeholder={t('forms.MobileNumber')} defaultValue={this.getValue('mobileNumber')} onFocus={() => this.setTouched('mobileNumber')} onBlur={() => this.validation('mobileNumber', t('forms.MobileNumber'))} onChange={(e) => { this.setData(e.target.value, 'mobileNumber'); this.validate(e); }} />\n                        </Input.Group>\n                        {\n                            this.getMessage('mobileNumber') && <span className=\"field-error\">{this.getMessage('mobileNumber')}</span>\n                        }\n                    </Form.Item>\n                    <Form.Item name='collectionBranch' label={t('forms.CollectionBranch')}>\n                        <Select labelInValue size=\"large\" placeholder={t('forms.SelectPlaceholder')} defaultValue={this.getValue('collectionBranch')} onFocus={() => this.setTouched('collectionBranch')} onBlur={() => this.validation('collectionBranch', t('forms.CollectionBranch'))} onChange={(e) => { this.getDateList(e); this.setData(e, 'collectionBranch'); }}>\n                            {Object.entries(this.state.branchList).map(([k, v]: any) => (\n                                _.size(v) &&\n                                <OptGroup label={k === 'regionOne' ? t('forms.regionOne') : ((k === 'regionTwo' ? t('forms.regionTwo') : t('forms.regionThree')))}>\n                                    {v.map((d: any) => (\n                                        <Option value={d.code}>{(this.props.lang === 'en') ? d.name : d.chineseName}</Option>\n                                    ))}\n                                </OptGroup>\n                            ))}\n                        </Select>\n                        {\n                            this.getMessage('collectionBranch') && <span className=\"field-error\">{this.getMessage('collectionBranch')}</span>\n                        }\n                    </Form.Item>\n                    {\n                        this.state.dateList.length === 0 && this.state.datesLoaded &&\n                        <span className=\"field-error\">{t('forms.noslotsavailable')}</span>\n                    }\n                    <Form.Item name='collectionDate' label={t('forms.CollectionDate')}>\n                        <DatePicker disabled={_.size(this.state.dateList) < 1} size=\"large\" format={'DD/MM/YYYY'} defaultValue={this.getValue('collectionDate')} value = {this.state.selectedDate} onFocus={() => this.setTouched('collectionDate')} onBlur={() => this.validation('collectionDate', t('forms.CollectionDate'))} disabledDate={(e) => this.disabledDate(e)} onChange={(e) => { this.getTimeSlots(e); this.setData(e, 'collectionDate'); }}\n                            style={{\n                                width: '100%',\n                            }}\n                        />\n                        {\n                            this.getMessage('collectionDate') && <span className=\"field-error\">{this.getMessage('collectionDate')}</span>\n                        }\n                    </Form.Item>\n                    <Form.Item name='collectionTimeslot' label={t('forms.CollectionTimeslot')}>\n                        <Select size=\"large\" disabled={_.size(this.state.dateList) < 1} placeholder={t('forms.SelectPlaceholder')} value = {this.state.selectedTimeSlot} defaultValue={this.getValue('collectionTimeslot')} onFocus={() => this.setTouched('collectionTimeslot')} onBlur={() => this.validation('collectionTimeslot', t('forms.CollectionTimeslot'))} onChange={(e) => this.setData(e, 'collectionTimeslot')}>\n                            {this.state.collectionTimeSlots.map((dt) => (\n                                <Option value={dt['slot-time']}>{dt['slot-time']}</Option>\n                            ))}\n                        </Select>\n                        {\n                            this.getMessage('collectionTimeslot') && <span className=\"field-error\">{this.getMessage('collectionTimeslot')}</span>\n                        }\n                    </Form.Item>\n                    <Form.Item label={t('forms.Quantity')}>\n                        <Space direction='vertical'>\n                            <span className=\"ant-form-text\">1</span>\n                            <span className=\"ant-form-text\">{t('forms.QuantityText')}</span>\n                        </Space>\n                    </Form.Item>\n                    <Form.Item label={t('forms.Declaration')}>\n                        <Space direction='vertical'>\n                            <Checkbox checked={this.getValue('declaration', 'info')} onChange={(e) => this.setData(e.target.checked, 'declaration', 'info')}>{t('forms.DeclarationPoints.1')}</Checkbox>\n                            <Checkbox checked={this.getValue('declaration', 'termsCondition')} onChange={(e) => this.setData(e.target.checked, 'declaration', 'termsCondition')}>{t('forms.DeclarationPoints.2')}</Checkbox>\n                        </Space>\n                        {\n                            this.getMessage('declaration') && <span className=\"field-error\">{this.getMessage('declaration')}</span>\n                        }\n                    </Form.Item>\n                </Form>\n            </div>\n        )\n    }\n}\nconst FormsTranslated: any = withTranslation()(Forms);\nexport default FormsTranslated;","import './review-booking.scss';\n\nimport { Component } from \"react\";\nimport { withTranslation } from 'react-i18next';\nimport { CommonHttpService } from '../../../services/common-http.service';\nimport _ from 'lodash';\nimport moment from 'moment'\n\nclass ReviewBooking extends Component {\n    state = { mobile: '', selectedRowKeys: [], mobileSearch: null, loadingAppointment: false, appointmentData: null, status: null };\n    service = new CommonHttpService();\n    fields: any = [];\n\n    componentWillUnmount() {\n        this.setState({ mobile: '', selectedRowKeys: [], mobileSearch: null, loadingAppointment: false, appointmentData: null, status: null });\n    }\n\n    componentDidMount() {\n        console.log(this.props.fields);\n    }\n\n    props: any = this.props;\n    constructor(props?: any) {\n        super(props);\n        props = this.props;\n        console.log(this.props);\n    }\n\n    getValue(key: any) {\n        const data = _.find(this.props.fields, ['name', key]);\n        console.log(\"data is:\", data);\n        if (data && data.value) {\n            return (key === 'collectionDate') ? moment(data.value).format('DD/MM/YYYY') : (key === 'collectionBranch' && data.value && data.value.label) ? data.value.label : data.value;\n        }\n        return '-';\n    }\n\n    render() {\n        const { t }: any = this.props;\n        this.fields = _.reject(this.props.fields, 'hide');\n        return (\n            <div className='review-booking'>\n                <div className=\"title\">Review Order Details</div>\n                <div className='prop-list'>\n                    {\n                        this.fields.map((pf: any) => (\n                            <div className='prop-li'>\n                                <div className='pl-label'>{t(`forms.${pf.label.replace(' ', '')}`)}</div>\n                                <div className='pl-divider'>:</div>\n                                <div className='pl-value'>{this.getValue(pf.name) || '-'}</div>\n                            </div>\n                        ))\n\n                    }\n                    <div className='prop-li'>\n                        <div className='pl-label'>{t('forms.Quantity')}</div>\n                        <div className='pl-divider'>:</div>\n                        <div className='pl-value'>\n                            <div className=\"ant-form-text\">1</div>\n                            <div className=\"ant-form-text\">{t('forms.QuantityText')}</div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\nconst ReviewBookingTranslated: any = withTranslation()(ReviewBooking);\nexport default ReviewBookingTranslated;","import { Component } from \"react\";\nimport { Modal, Button, Empty } from 'antd';\nimport { withTranslation } from 'react-i18next';\n\nclass ModalComponent extends Component {\n    props: any = this.props;\n    state = { isModalVisible: false };\n\n    componentWillUnmount() {\n        this.setState({ isModalVisible: false });\n    }\n\n    render() {\n        const { t }: any = this.props;\n        return (\n            <Modal visible={this.props.visible} onCancel={() => this.props.onChange(false)} footer={[\n                <Button key=\"submit\" type=\"primary\" onClick={() => this.props.onChange(false)}>\n                    {t('modal.okbutton')}\n                </Button>\n            ]}>\n                <div className='modal-content-data'>\n                    {\n                        (this.props.method === 'info' || this.props.method === 'error' || this.props.method === 'success') &&\n                        // Method: 'info' | 'error' | 'success'\n                        <Empty image={`/assets/images/modal/${this.props.method}.svg`} description={false} />\n                    }\n                    {\n                        this.props.title &&\n                        <div className=\"modal-title\">\n                        {this.props.title}\n                    </div>\n                    }\n                    {\n                        this.props.message.map((pm: any) => (\n                            <div className=\"modal-message\">\n                                {pm}\n                            </div>\n                        ))\n                    }\n                </div>\n            </Modal>\n        );\n    }\n}\nconst ModalComponentTranslated: any = withTranslation()(ModalComponent);\nexport default ModalComponentTranslated;","import './new-booking.scss';\n\nimport { Layout, Button, Row, Col, Space } from 'antd';\nimport { ArrowLeftOutlined, ArrowRightOutlined } from '@ant-design/icons';\nimport { Component } from 'react';\nimport FormsTranslated from '../../form/form';\nimport ReviewBookingTranslated from '../review-booking/review-booking';\nimport { withTranslation } from 'react-i18next';\nimport { CommonHttpService } from '../../../services/common-http.service';\nimport ModalComponentTranslated from '../../modal';\nimport * as _ from 'lodash';\nimport moment from 'moment'\nimport { Redirect } from 'react-router-dom';\n\nconst { Footer } = Layout;\n\nconst formControls = [\n    { label: 'Title', name: 'title', value: null, required: true, touched: false },\n    { label: 'Last Name', name: 'lastName', value: null, required: true, touched: false },\n    { label: 'Mobile Number', name: 'mobileNumber', value: null, required: true, touched: false },\n    { label: 'Collection Branch', name: 'collectionBranch', value: null, required: true, touched: false },\n    { label: 'Collection Date', name: 'collectionDate', value: null, required: true, touched: false },\n    { label: 'Collection Timeslot', name: 'collectionTimeslot', value: null, required: true, touched: false },\n    { label: 'Declaration', name: 'declaration', info: false, termsCondition: false, required: true, touched: false, hide: true }\n]\n\nclass NewBooking extends Component {\n    form: any;\n    state = { navigate: false, bookingProgress: false, status: null, refNo: '', fields: _.cloneDeep(formControls), orderStatus: \"change\", showModal: false, modalMsg: null, modalMethod: null };\n    props: any = this.props;\n    service = new CommonHttpService();\n    constructor(props?: any) {\n        super(props);\n        props = this.props;\n        console.log(\"lanaguge:\" + this.props.lang)\n        console.log(\"uuid:\" + this.props.uuid)\n        this.setState({ fields: this.props.fields });\n    }\n\n    componentWillUnmount() {\n        // this.setState({ fields: formControls, orderStatus: \"change\" });\n    }\n\n    componentDidMount() {\n        // this.setState({ showModal: true, modalMethod: 'info' });\n        console.log(\"component mounted\");\n    }\n\n    getValue(key: any) {\n        const data: any = _.find(this.state.fields, ['name', key]);\n        console.log(\"data is:\", data);\n        if (data && data.value) {\n            return (key === 'collectionDate') ? moment(data.value).format('DD/MM/YYYY') : (key === 'collectionBranch' && data.value && data.value.label) ? data.value.label : data.value;\n\n        }\n        return '-';\n    }\n\n    getBranchCode(key: any) {\n        console.log(\"data for branch code:\", this.state.fields)\n        const data: any = _.find(this.state.fields, ['name', key]);\n        console.log(\"data is:\", data);\n        if (data && data.value) {\n            return (key === 'collectionBranch') ? data.value.value : '-';\n        }\n        return '-';\n    }\n\n    get disableButton(): boolean {\n        const overallvalidation: boolean = (!!_.find(this.state.fields, ['value', null]) || !!_.find(this.state.fields, ['value', undefined]));\n        const mobileNumber: any = _.find(this.state.fields, ['name', 'mobileNumber']);\n        const mobileNumberValidation: boolean = ((mobileNumber.value && mobileNumber.value.length !== 8) || !Number(mobileNumber.value));\n        const declaration: any = _.find(this.state.fields, ['name', 'declaration']);\n        const declarationValidation: boolean = !declaration.info || !declaration.termsCondition;\n        console.log(declarationValidation);\n        return overallvalidation || mobileNumberValidation || declarationValidation;\n    }\n\n    submitOrder() {\n        this.setState({ status: null });\n        this.setState({ bookingProgress: true });\n        this.setState({ modalMethod: null });\n        let validateCaptcha = {\n            \"data\":\n            {\n                \"id\": 0,\n                \"type\": \"APPOINTMENT\",\n                \"attributes\": {\n                    \"unique-id\": this.props.uuid,\n                    \"branch-code\": this.getBranchCode('collectionBranch'),\n                    \"title\": this.getValue('title'),\n                    \"appointment-slot\": this.getValue('collectionTimeslot'),\n                    \"last-name\": this.getValue('lastName'),\n                    \"mobileNo\": '852' + this.getValue('mobileNumber'),\n                    \"appointment-date\": this.getValue('collectionDate'),\n                    \"quantity\": 1,\n                    \"booked-date\": moment().format('YYYY-MM-DD HH:mm:ss.SSS'),\n                    \"status\": 'booked',\n                    \"language-code\": this.props.lang,\n                    \"branch-name\": this.getValue('collectionBranch'),\n                    \"ref-id\": this.props.uuid\n                }\n            }\n        };\n        this.service.post('', validateCaptcha, this.props.uuid, this.props.lang).then((result) => {\n            this.setState({ bookingProgress: false });\n            this.setState({\n                status: result.status,\n            });\n            return result.json();\n        }).then((response) => {\n            console.log(\"result.status:\", this.state.status + \", ref\", response['tp-ref'])\n            if (this.state.status === 404) {\n                console.log(\"the error code:\", response['code'])\n                if(response['code']!==undefined && response['code']==='FORMS-API-CNYNOTES001'){\n                    this.setState({ showModal: true });\n                    this.setState({ modalMethod: 'error' });\n                    this.setState({ modalMsg: \"booking_duplicatemobile\" });\n                    this.setState({ refNo: '' });\n                }else if(response['code']!==undefined && response['code']==='FORMS-API-CNYNOTES003'){\n                    this.setState({ showModal: true });\n                    this.setState({ modalMethod: 'error' });\n                    this.setState({ modalMsg: \"booking_noslotavaialble\" });\n                    this.setState({ refNo: '' });\n                }\n            } else if (this.state.status === 200) {\n                this.setState({ modalMethod: 'success' });\n                this.setState({ showModal: true });\n                this.setState({ modalMsg: \"booking_success\" });\n                this.setState({ refNo: response['tp-ref'] });\n            } else {\n\n            }\n        }).catch((error) => {\n            this.setState({ modalMethod: 'error' });\n            this.setState({ showModal: true });\n            this.setState({ modalMsg: \"cancel_failure\" });\n        });\n    }\n\n    reviewOrder(fields: any) {\n        this.setState({ orderStatus: 'review' });\n    }\n\n    backToChange() {\n        this.setState({ orderStatus: 'change' });\n    }\n\n    modalClosed(event: any) {\n        this.setState({ fields: _.cloneDeep(formControls), showModal: event });\n        this.backToChange();\n    }\n\n    render() {\n        const { t }: any = this.props;\n        return (\n            <span>\n                {\n                    this.state.bookingProgress &&\n                    <div id=\"loader\" className=\"loader\"></div>\n                }\n                {\n                    this.state.orderStatus === 'change' &&\n                    <FormsTranslated {...this.props} form={this.form} fields={this.state.fields} onChange={(newFields: any) => { this.setState({ fields: newFields }); }} />\n                }\n                {\n                    this.state.orderStatus === 'review' &&\n                    <ReviewBookingTranslated fields={this.state.fields} />\n                }\n                <Footer>\n                    <Row className='footer-row'>\n                        {\n                            this.state.orderStatus === 'review' &&\n                            <Space align='end'>\n                                <Button danger type='primary' icon={<ArrowLeftOutlined />} onClick={() => this.backToChange()}>{t('new_booking.button.back')}</Button>\n                                <Button className='review-btn' disabled={this.disableButton} type='primary' icon={<ArrowRightOutlined />} onClick={() => this.submitOrder()}>{t('new_booking.button.submit')}</Button>\n                            </Space>\n                        }\n                        {\n                            this.state.orderStatus === 'change' &&\n                            <Space align='end'>\n                                <Button className='submit-btn' disabled={this.disableButton} type='primary' icon={<ArrowRightOutlined />} onClick={() => this.reviewOrder(this.state.fields)}>{t('new_booking.button.review')}</Button>\n                            </Space>\n                        }\n                    </Row>\n                </Footer>\n                <ModalComponentTranslated\n                    visible={this.state.showModal}\n                    // title={'Are you Sure?'}\n                    message={[this.state.modalMsg ? t('new_booking.' + this.state.modalMsg) : null, this.state.refNo ? `${t('new_booking.refnumber')}: ${this.state.refNo}` : null]}\n                    // Method: 'info' | 'error' | 'success'\n                    method={this.state.modalMethod}\n                    onChange={(event: any) => this.modalClosed(event)}></ModalComponentTranslated>\n            </span>\n        );\n    }\n}\n\nconst NewBookingTranslated = withTranslation()(NewBooking);\nexport default NewBookingTranslated;","import './update-booking.scss';\n\nimport { Component } from \"react\";\nimport { Button, Col, Form, Input, Space, Table } from 'antd';\nimport { ArrowRightOutlined } from '@ant-design/icons';\nimport { withTranslation } from 'react-i18next';\nimport { CommonHttpService } from '../../../services/common-http.service';\nimport * as _ from 'lodash';\nimport ModalComponentTranslated from '../../modal';\n\nvar dateFormat = require('dateformat');\n\n\nclass UpdateBooking extends Component {\n    state = { modalMsg: '', refNo: '', modalMethod: null, showModal: false, mobile: '', mobileNumber: '', rowSelected: false, selectedRowKeys: [], selectedRows: [], mobileSearch: null, loadingAppointment: false, appointmentData: null, status: null };\n    service = new CommonHttpService();\n\n\n    componentWillMount() {\n        console.log(\"tereeeee\");\n        this.setState({ appointmentData: null });\n        this.setState({ selectedRows: null });\n        this.setState({ selectedRowKeys: null });\n        this.setState({ rowSelected: false });\n    }\n\n    componentDidUnMount() {\n        console.log(\"testsss....\");\n        this.setState({ appointmentData: null });\n        this.setState({ selectedRows: null });\n        this.setState({ selectedRowKeys: null });\n        this.setState({ rowSelected: false });\n    }\n\n\n    getAppointments() {\n        this.setState({ loadingAppointment: true });\n        this.setState({ appointmentData: null });\n        this.rowSelection = {\n            selectedRowKeys: [],\n            onChange: this.onSelectChange\n        }\n        let getAppointmentData = {\n            \"data\":\n            {\n                \"id\": 0,\n                \"type\": \"APPOINTMENT\",\n                \"attributes\": { \"unique-id\": this.props.uuid, \"mobileNo\": '852' + this.state.mobileNumber }\n            }\n        };\n        this.service.post('/appointments', getAppointmentData, this.props.uuid, this.props.lang).then(res => {\n            this.setState({\n                status: res.status,\n            });\n            return res.json();\n        }).then((response) => {\n            this.setState({ mobile: '' });\n            if (this.state.status === 404) {\n                this.setState({ loadingAppointment: false });\n            } else if (this.state.status === 200) {\n                this.setState({ loadingAppointment: false });\n                _.each(response, (el: any) => {\n                    el[\"appointmentdate\"] = dateFormat(el[\"appointment-date\"], \"dd-mm-yyyy\")\n                    el[\"appointment-date\"] = dateFormat(el[\"appointment-date\"], \"dd/mm/yyyy\")\n                })\n                this.setState({ appointmentData: response });\n            } else {\n                this.setState({ loadingAppointment: false });\n            }\n        }).catch((error) => {\n            this.setState({ loadingAppointment: false });\n        });\n    }\n\n    cancelAppointment() {\n        this.setState({ loadingAppointment: true });\n        let cancelAppointment = {\n            \"data\":\n            {\n                \"id\": 0,\n                \"type\": \"CANCELATION\",\n                \"attributes\": this.state.selectedRows[0]\n            }\n        } as any;\n        delete cancelAppointment.data.attributes['booked-date']\n        cancelAppointment.data.attributes['unique-id'] = this.props.uuid;\n        cancelAppointment.data.attributes['id'] = 0;\n        cancelAppointment.data.attributes['status'] = 'cancelled';\n        cancelAppointment.data.attributes['language-code'] = this.props.lang;\n        this.service.post('', cancelAppointment, this.props.uuid, this.props.lang).then((result) => {\n            this.setState({ verifyButtonLoader: false });\n            console.log(\"result.status:\" + result.status)\n            if (result.status === 404) {\n                this.setState({ loadingAppointment: false });\n            } else if (result.status === 200) {\n                this.setState({ loadingAppointment: false });\n                this.setState({ modalMethod: 'success', showModal: true });\n                this.setState({ modalMsg: \"cancel_success\" });\n                this.setState({ rowSelected: true });\n                this.setState({ refNo: cancelAppointment.data.attributes['ref-id'] });\n                this.getAppointments();\n            } else {\n                this.setState({ loadingAppointment: false });\n            }\n        }).catch((error) => {\n            this.setState({ loadingAppointment: false });\n        });\n    }\n\n    onSelectChange = (selectedRowKeys: any, selectedRows: any) => {\n        console.log(\"selectedRows:\", selectedRows[0]);\n        this.setState({ selectedRowKeys });\n        this.setState({ selectedRows });\n        this.setState({ rowSelected: true });\n        this.rowSelection.selectedRowKeys = selectedRowKeys;\n    };\n\n    rowSelection = {\n        selectedRowKeys: [],\n        onChange: this.onSelectChange\n    };\n\n\n    validate(e: any) {\n        const re = /^[0-9\\b]+$/;\n        if (e.target.value === '' || re.test(e.target.value)) {\n            this.setState({ mobile: e.target.value })\n            this.setState({ mobileNumber: e.target.value })\n            this.setState({ rowSelected: false });\n        }\n    }\n\n\n    props: any = this.props;\n    constructor(props?: any) {\n        super(props);\n        props = this.props;\n        console.log(\"lanaguge:\" + this.props.lang)\n        console.log(\"uuid:\" + this.props.uuid)\n        this.validate = this.validate.bind(this);\n    }\n    columns = [\n        {\n            title: 'Collection Date',\n            dataIndex: 'appointmentdate'\n        },\n        {\n            title: 'Collection Branch',\n            dataIndex: 'branch-name'\n        },\n        {\n            title: 'Collection Timeslot',\n            dataIndex: 'appointment-slot'\n        },\n        {\n            title: 'Reference Number',\n            dataIndex: 'ref-id'\n        }\n    ];\n\n    data: any = [];\n\n\n    render() {\n        const { t }: any = this.props;\n        return (\n            <div>\n                <Form className='update-booking' layout=\"horizontal\">\n                    <Space direction=\"vertical\">\n                        <Form.Item name='mobileNumber' label={t('update_booking.mobile')}>\n                            <Input.Group compact>\n                                <Input className='country-code' disabled={true} size=\"large\" defaultValue=\"852\" />\n                                <Input className='mobile-number' size=\"large\" maxLength={8} placeholder={t('update_booking.mobile')} value={this.state.mobile} onChange={this.validate} autoFocus onPressEnter={() => this.getAppointments()} />\n                            </Input.Group>\n                        </Form.Item>\n                        <div className='buttons'>\n                            {\n                                !this.state.rowSelected &&\n                                <Button className='submit-btn' type=\"primary\" disabled={this.state.mobile.length !== 8} icon={<ArrowRightOutlined />} onClick={() => this.getAppointments()}>{t('update_booking.button')}</Button>\n                            }\n                            {\n                                this.state.rowSelected &&\n                                <Button className='submit-btn' type=\"primary\" icon={<ArrowRightOutlined />} onClick={() => this.cancelAppointment()}>{t('update_booking.cancelbutton')}</Button>\n                            }\n                        </div>\n                    </Space>\n                </Form>\n                {\n                    this.state.loadingAppointment &&\n                    <div id=\"loader\" className=\"loader\"></div>\n                }\n                {\n                    this.state.appointmentData !== null &&\n                    <Table locale={{ emptyText: t('update_booking.norecordfound') + '852' + this.state.mobileNumber }} rowSelection={{ type: 'radio', ...this.rowSelection }} columns={this.columns} dataSource={this.state.appointmentData} size=\"small\" bordered />\n                }\n                <ModalComponentTranslated\n                    visible={this.state.showModal}\n                    // title={'Are you Sure?'}\n                    message={[this.state.modalMsg ? t('update_booking.' + this.state.modalMsg) : null, this.state.refNo ? `${t('new_booking.refnumber')}: ${this.state.refNo}` : null]}\n                    // Method: 'info' | 'error' | 'success'\n                    method={this.state.modalMethod}\n                    onChange={(event: any) => this.setState({ showModal: event })}></ModalComponentTranslated>\n            </div>\n        );\n    }\n}\nconst UpdateBookingTranslated = withTranslation()(UpdateBooking);\nexport default UpdateBookingTranslated;","import './tab.scss';\n\nimport { Layout, Tabs } from 'antd';\nimport NewBooking from './new-booking/new-booking';\nimport UpdateBooking from './update-booking/update-booking';\nimport { withTranslation } from 'react-i18next';\nimport { Component } from 'react';\n\nconst { Header, Content } = Layout;\nconst { TabPane } = Tabs;\n\n\nclass Tab extends Component {\n    props: any = this.props;\n    constructor(props?: any) {\n        super(props);\n        props = this.props;\n    }\n\n    state = { tabChange: false };\n\n    render() {\n        const { t }: any = this.props;\n        return (\n            <Layout>\n                <Header>\n                    <div className='header'>{t('new_booking.header')}</div>\n                    <div className='hint'>{t('new_booking.hint')}</div>\n                </Header>\n                <Content>\n                    <Tabs defaultActiveKey=\"new\" onChange={(event: any) => this.setState({ tabChange: event === 'new' })}>\n                        <TabPane tab={t('tab.new_booking')} key=\"new\">\n                            <NewBooking {...this.props} tabChange={this.state.tabChange} />\n                        </TabPane>\n                        <TabPane tab={t('tab.update_booking')} key=\"cancellationAndEnquiries\">\n                            <UpdateBooking {...this.props} />\n                        </TabPane>\n                    </Tabs>\n                </Content>\n            </Layout>\n        );\n    }\n}\n\nconst TabTranslated = withTranslation()(Tab);\n\nexport default TabTranslated;","import { Component } from 'react';\nimport { withTranslation } from 'react-i18next';\nimport './important-notes.scss';\n\nclass ImportantNotes extends Component {\n    render() {\n        const { t }: any = this.props;\n        return (\n            <div className='important-notes'>\n                <div className=\"title\">{t('importantNotes.title')}</div>\n                <ol>\n                    <li>{t(`importantNotes.1`)}</li>\n                    <li>{t(`importantNotes.2`)}</li>\n                    <li>{t(`importantNotes.3`)}</li>\n                    <li>{t(`importantNotes.4`)}</li>\n                    <li>{t(`importantNotes.5`)}</li>\n                    <li>{t(`importantNotes.6`)}</li>\n                    <li>{t(`importantNotes.7`)}</li>\n                </ol>\n            </div>\n        )\n    }\n}\n\nconst ImportantNotesTranslated = withTranslation()(ImportantNotes);\n\nexport default ImportantNotesTranslated;","import './Captcha.scss';\nimport { Component } from \"react\";\nimport { Button,  Input, Layout } from 'antd';\nimport { GlobalOutlined, ReloadOutlined } from '@ant-design/icons';\nimport { withTranslation } from 'react-i18next';\nimport i18n from '../../wrappers/i18n/i18n';\nimport { CommonHttpService } from '../../services/common-http.service';\nimport TabTranslated from '../tab/tab';\nimport ImportantNotesTranslated from '../important-notes/important-notes';\nconst { Header, Content } = Layout;\n\n\nclass Captcha extends Component {\n    state: any = { navigate: false, captchaInput: '', verifyButtonLoader: false, reloadCaptchaLoader: false, captcha: null, lang: 'en', message: null };\n    service = new CommonHttpService();\n    constructor(props?: any) {\n        super(props);\n        this.changeLanguageHandler('en');\n\n    }\n\n    componentDidMount() {\n        this.getStatus();\n    }\n\n    changeLanguageHandler(lang: any) {\n        this.setState({ lang });\n        this.service.setLanguage(lang);\n        i18n.changeLanguage(lang);\n    }\n\n    getStatus() {\n        this.service.get('/servicecheck', this.state.uuid, this.state.lang).then((result) => {\n            console.log(\"param value:\", result.paramValue)\n            if (result.paramValue === undefined) {\n                this.setState({ message: \"Error\" });\n            } else {\n                this.setState({ message: result.paramValue });\n            }\n            if (result.paramValue && result.paramValue.toLowerCase() === 'Up'.toLowerCase()) {\n                this.refreshCaptcha();\n            }\n        }).catch((error) => {\n            this.setState({ message: \"Error\" });\n        })\n    }\n\n    refreshCaptcha() {\n        this.setState({ reloadCaptchaLoader: true });\n        this.setState({ captchainvalid: false });\n        this.setState({ captchaInput: \"\" });\n        this.setState({ captcha: null });\n        this.service.get('/captcha', this.state.uuid, this.state.lang).then((result) => {\n            this.setState({ reloadCaptchaLoader: false });\n            this.setState({ captcha: result.data.captcha });\n            this.setState({ uuid: result.data.uuid });\n            this.service.setUUID(result.data.uuid);\n        }).catch((error) => {\n            this.setState({ reloadCaptchaLoader: false });\n            this.setState({ captcha: null });\n            this.setState({ message: \"Error\" });\n        })\n    }\n\n    validate(e: any) {\n        console.log(\"test in validate\" + e.target.value.toUpperCase());\n        const re = /^[0-9a-zA-Z\\b]+$/;\n        if (e.target.value === '' || re.test(e.target.value)) {\n            this.setState({ captchaInput: e.target.value.toUpperCase() })\n        }\n    }\n\n    verifyCaptcha() {\n        this.setState({ verifyButtonLoader: true });\n        let validateCaptcha = {\n            \"data\":\n            {\n                \"id\": 0,\n                \"type\": \"CAPTCHAVALIDATION\",\n                \"attributes\": { \"unique-id\": this.state.uuid, \"captha-answer\": this.state.captchaInput }\n            }\n        };\n        this.service.post('/captcha', validateCaptcha, this.state.uuid, this.state.lang).then((result) => {\n            this.setState({ verifyButtonLoader: false });\n            console.log(\"result.status:\" + result.status)\n            if (result.status === 404) {\n                this.setState({ navigate: false });\n                this.setState({ captchainvalid: true });\n                this.setState({ captchaInput: \"\" });\n            } else if (result.status === 200) {\n                this.setState({ navigate: true });\n            } else {\n                this.setState({ navigate: false });\n                this.setState({ captchainvalid: true });\n                this.setState({ captchaInput: \"\" });\n            }\n        }).catch((error) => {\n            this.setState({ captcha: null });\n            this.setState({ message: \"Error\" });\n            this.setState({ verifyButtonLoader: false });\n        });\n    }\n\n    render() {\n        const { t }: any = this.props;\n        console.log(this.state)\n        let propsdata = {\n            lang: this.state.lang,\n            uuid: this.state.uuid\n        }\n        if (this.state.navigate) {\n            return (\n                <TabTranslated {...propsdata} />\n            );\n        }\n        return (\n            <Layout className=\"captcha\">\n               <Header>\n               <img className='sc-logo' src='/assets/images/sc-logo.svg' alt=\"Logo\" />\n               <img className='sc-mobile-logo' src='/assets/images/sc-mobile-logo.svg' alt=\"Logo\" />\n                    <div className='border'>\n                        <div className='border-top'></div>\n                        <div className='border-bottom'></div>\n                    </div>\n                    <div className='header-title'>{t('new_booking.header')}\n                    <Button icon={<GlobalOutlined />} shape=\"round\" className='lang' onClick={() => this.changeLanguageHandler(this.state.lang === 'en' ? 'zh' : 'en')}>{t(`captcha.selectOptions.${this.state.lang === 'en' ? 'English' : 'Chinese'}`)}</Button>\n                    </div>\n                </Header>\n                <Content>\n                    <ImportantNotesTranslated />\n                    <div className=\"captcha-validation\">\n                        {\n                            !this.state.message &&\n                            <div id=\"loader\" className=\"loader\"></div>\n                        }\n                        {/* Technical Error */}\n                        {\n                            this.state.message && this.state.message.toLowerCase() === 'Error'.toLowerCase() &&\n                            <div className='header'>{t('captcha.TechnicalError')}</div>\n                        }\n                        {/* System Maintenance */}\n                        {\n                            this.state.message && this.state.message.toLowerCase() === 'Maintenance'.toLowerCase() &&\n                            <div className='header'>{t('captcha.Maintenance')}</div>\n                        }\n                        {/* Thank You */}\n                        {\n                            this.state.message && this.state.message.toLowerCase() === 'Thankyou'.toLowerCase() &&\n                            <div className='header'>{t('captcha.Thankyou')}</div>\n                        }\n                        {\n                            this.state.message && this.state.message.toLowerCase() === 'Up'.toLowerCase() &&\n                            <div className=\"block\">\n                                <div>{t('captcha.header')}</div>\n                                {\n                                    this.state.reloadCaptchaLoader && !this.state.captcha &&\n                                    <div id=\"loader\" className=\"loader\"></div>\n                                }\n                                {\n                                    !this.state.reloadCaptchaLoader && this.state.captcha &&\n                                    <div className='captcha-img'>\n                                        <img src={'data:image/png;base64,' + this.state.captcha} alt=\"Captcha\" />\n                                        <Button className='img-reload' shape=\"circle\" icon={<ReloadOutlined />} onClick={() => this.refreshCaptcha()}></Button>\n                                    </div>\n                                }\n\n                                <Input placeholder={t('captcha.placeholder')} size=\"large\" maxLength={6} value={this.state.captchaInput} autoFocus onChange={(e) => { this.validate(e); }} onPressEnter={() => this.verifyCaptcha()} />\n                                {\n                                    !this.state.reloadCaptchaLoader && this.state.captcha && this.state.captchainvalid &&\n                                    <div className='captcha-error'>\n                                        {t('captcha.Error')}\n                                    </div>\n                                }\n                                <Button block disabled={this.state.captchaInput?.length !== 6} onClick={() => this.verifyCaptcha()}>{t('captcha.button')}</Button>\n                                {\n                                    this.state.verifyButtonLoader &&\n                                    <div id=\"loader\" className=\"loader\"></div>\n                                }\n                            </div>\n                        }\n                    </div>\n                </Content>\n            </Layout>\n        )\n    }\n}\nconst CaptchaTranslated = withTranslation()(Captcha);\nexport default CaptchaTranslated;","import './App.scss';\n\nimport { Component } from 'react';\nimport Tab from './components/tab/tab';\nimport Captcha from './components/captcha/Captcha';\n\nimport { BrowserRouter, HashRouter, Redirect, Route } from 'react-router-dom';\n\nclass App extends Component {\n  render() {\n    return (\n      <HashRouter>\n        <Route path=\"/captcha\" component={Captcha} />\n        <Route path=\"/booking\" component={Tab} />\n        <Redirect to=\"/booking\" />\n      </HashRouter>\n    );\n  }\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport \"./wrappers/i18n/i18n\";\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}