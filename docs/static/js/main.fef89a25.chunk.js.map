{"version":3,"sources":["components/form/form.tsx","components/important-notes/important-notes.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Forms","props","className","status","layout","fields","onFieldsChange","_","allFields","onChange","form","Item","name","label","rules","required","message","disabled","size","placeholder","value","map","i","style","width","ImportantNotes","Header","Layout","Footer","Content","formControls","App","state","orderStatus","console","log","this","setState","f","newFields","span","offset","align","danger","type","icon","ArrowLeftOutlined","onClick","backToChange","ArrowRightOutlined","submitOrder","reviewOrder","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fef89a25.chunk.js","sourcesContent":["import './form.scss';\r\n\r\nimport { Row, Form, Input, Select, DatePicker, Space } from 'antd';\r\nimport { Option } from 'antd/lib/mentions';\r\n\r\nfunction Forms(props: any) {\r\n    return (\r\n        <div className='form'>\r\n            <div className=\"title\">{props.status === 'review' ? 'Review of ' : ''}Order Details</div>\r\n            <Form layout=\"vertical\" fields={props.fields}\r\n                onFieldsChange={(_, allFields) => {\r\n                    props.onChange(allFields);\r\n                }} form={props.form}>\r\n                <Row>\r\n                    <Space>\r\n                        <Form.Item name='title' label=\"Title\" rules={[{ required: true, message: 'Username is required!' }]}>\r\n                            <Select disabled={props.status === 'review'} size=\"large\" placeholder=\"Please Select...\">\r\n                                <Option value=\"Mr.\">Mr.</Option>\r\n                                <Option value=\"Mrs.\">Mrs.</Option>\r\n                            </Select>\r\n                        </Form.Item>\r\n                        <Form.Item name='firstName' label=\"First Name\" rules={[{ required: true, message: 'Username is required!' }]}>\r\n                            <Input disabled={props.status === 'review'} size=\"large\" placeholder=\"First Name\" />\r\n                            {\r\n                                false && <span className=\"ant-form-text\">First Name</span>\r\n                            }\r\n                        </Form.Item>\r\n                        <Form.Item name='lastName' label=\"Last Name\" rules={[{ required: true, message: 'Username is required!' }]}>\r\n                            <Input disabled={props.status === 'review'} size=\"large\" placeholder=\"Last Name\" />\r\n                            {\r\n                                false && <span className=\"ant-form-text\">Last Name</span>\r\n                            }\r\n                        </Form.Item>\r\n                    </Space>\r\n                </Row>\r\n                <Row>\r\n                    <Space>\r\n                        <Form.Item name='mobileNumber' label=\"Mobile Number\" rules={[{ required: true, message: 'Username is required!' }]}>\r\n                            <Input disabled={props.status === 'review'} size=\"large\" placeholder=\"Mobile Number\" />\r\n                            {\r\n                                false && <span className=\"ant-form-text\">Mobile Number</span>\r\n                            }\r\n                        </Form.Item>\r\n                        <Form.Item name='emailAddress' label=\"Email Address\" rules={[{ required: true, message: 'Username is required!' }]}>\r\n                            <Input disabled={props.status === 'review'} size=\"large\" placeholder=\"Email Address\" />\r\n                            {\r\n                                false && <span className=\"ant-form-text\">Email Address</span>\r\n                            }\r\n                        </Form.Item>\r\n                    </Space>\r\n                </Row>\r\n                <Row>\r\n                    <Space>\r\n                        <Form.Item name='collectionBranch' label=\"Collection Branch\" rules={[{ required: true, message: 'Username is required!' }]}>\r\n                            <Select disabled={props.status === 'review'} size=\"large\" placeholder=\"Please Select...\">\r\n                                {['1', '2', '3', '4', '5', '6', '7', '8'].map((i) => <Option value={i} >Branch {i}</Option>)}\r\n                            </Select>\r\n                        </Form.Item>\r\n                        <Form.Item name='collectionDate' label=\"Collection Date\" rules={[{ required: true, message: 'Username is required!' }]}>\r\n                            <DatePicker disabled={props.status === 'review'} size=\"large\"\r\n                                style={{\r\n                                    width: '100%',\r\n                                }}\r\n                            />\r\n                        </Form.Item>\r\n                        <Form.Item name='collectionTimeslot' label=\"Collection Timeslot\" rules={[{ required: true, message: 'Username is required!' }]}>\r\n                            <Select disabled={props.status === 'review'} size=\"large\" placeholder=\"Please Select...\">\r\n                                <Option value=\"10-11\">10.00 AM - 11.00 AM</Option>\r\n                                <Option value=\"11-12\">11.00 AM - 12.00 PM</Option>\r\n                                <Option value=\"12-13\">12.00 PM - 01.00 PM</Option>\r\n                                <Option value=\"14-15\">02.00 PM - 03.00 PM</Option>\r\n                                <Option value=\"15-16\">03.00 PM - 04.00 PM</Option>\r\n                                <Option value=\"16-17\">04.00 PM - 05.00 PM</Option>\r\n                                <Option value=\"17-18\">05.00 PM - 06.00 PM</Option>\r\n                                <Option value=\"18-19\">06.00 PM - 07.00 PM</Option>\r\n                                <Option value=\"19-20\">07.00 PM - 08.00 PM</Option>\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Space>\r\n                </Row>\r\n                <Form.Item label=\"Quantity\">\r\n                    <span className=\"ant-form-text\">1</span>\r\n                </Form.Item>\r\n            </Form>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Forms;","import './important-notes.scss';\r\n\r\nfunction ImportantNotes() {\r\n    return (\r\n        <div className='important-notes'>\r\n            <div className=\"title\">Important Notes</div>\r\n            <ol>\r\n                <li>Each client can only submit one pre-order application</li>\r\n                <li>xxx xxx xxx</li>\r\n                <li>xxx xxx xxx</li>\r\n            </ol>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImportantNotes;","import './App.scss';\n\nimport { Layout, Button, Row, Col, Space } from 'antd';\nimport { ArrowLeftOutlined, ArrowRightOutlined } from '@ant-design/icons';\nimport { Component } from 'react';\nimport Forms from './components/form/form';\nimport ImportantNotes from './components/important-notes/important-notes';\n\nconst { Header, Footer, Content } = Layout;\n\nconst formControls = [\n  { name: ['title'], value: null, required: true, disabled: false },\n  { name: ['firstName'], value: null, required: true, disabled: false },\n  { name: ['lastName'], value: null, required: true, disabled: false },\n  { name: ['mobileNumber'], value: null, required: true, disabled: false },\n  { name: ['emailAddress'], value: null, required: true, disabled: false },\n  { name: ['collectionBranch'], value: null, required: true, disabled: false },\n  { name: ['collectionDate'], value: null, required: true, disabled: false },\n  { name: ['collectionTimeslot'], value: null, required: true, disabled: false }\n]\n\nclass App extends Component {\n  form: any;\n  state = { fields: formControls, orderStatus: \"change\" };\n\n  submitOrder(fields: any) {\n    console.log(fields);\n  }\n\n  reviewOrder(fields: any) {\n    this.setState({ orderStatus: 'review' });\n    fields = formControls.map((f: any) => { f.disabled = true; return f });\n    this.setState({ fields });\n  }\n\n  backToChange() {\n    this.setState({ orderStatus: 'change' });\n  }\n  render() {\n    return (\n      <Layout>\n        <Header>\n          <div className='header'>Chinese New Year Banknotes Booking</div>\n          <div>Please fill in the below ordering form to complete the registration</div>\n        </Header>\n        <Content>\n          <ImportantNotes />\n          <Forms form={this.form} fields={this.state.fields} status={this.state.orderStatus} onChange={(newFields: any) => { this.setState({ fields: newFields }); }} />\n        </Content>\n        <Footer>\n          <Row className='footer-row'>\n            <Col span={4} offset={20}>\n              <Row>\n                {\n                  this.state.orderStatus === 'review' &&\n                  <Space align='end'>\n                    <Col span={12}>\n                      <Button danger type='primary' icon={<ArrowLeftOutlined />} onClick={() => this.backToChange()}>Back</Button>\n                    </Col>\n                    <Col span={12}>\n                      <Button type='primary' icon={<ArrowRightOutlined />} onClick={() => this.submitOrder(this.state.fields)}>Submit</Button>\n                    </Col>\n                  </Space>\n                }\n                {\n                  this.state.orderStatus === 'change' &&\n                  <Col span={12} offset={12}>\n                    <Button type='primary' icon={<ArrowRightOutlined />} onClick={() => this.reviewOrder(this.state.fields)}>Review</Button>\n                  </Col>\n                }\n              </Row>\n            </Col>\n          </Row>\n        </Footer>\n      </Layout>\n    );\n  }\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { HashRouter } from 'react-router-dom'; \n\nReactDOM.render(\n  <HashRouter>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </HashRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}