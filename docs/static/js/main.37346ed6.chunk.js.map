{"version":3,"sources":["wrappers/i18n/i18n.tsx","wrappers/i18n/en.tsx","wrappers/i18n/zh.tsx","components/form/form.tsx","components/tab/new-booking/new-booking.tsx","components/tab/update-booking/update-booking.tsx","components/important-notes/important-notes.tsx","components/tab/tab.tsx","components/captcha/Captcha.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["resources","en","translation","captcha","header","placeholder","button","selectOptions","English","Chinese","tab","new_booking","update_booking","importantNotes","title","hint","back","submit","review","mobile","email","forms","review_orders","response","zh","i18n","use","initReactI18next","init","lng","navigator","language","Option","Select","Forms","props","state","info","termsCondition","className","this","status","layout","fields","onFieldsChange","_","allFields","onChange","form","Item","name","label","rules","required","message","disabled","size","value","map","i","style","width","direction","checked","e","setState","target","Component","Footer","Layout","formControls","NewBooking","orderStatus","console","log","f","t","newFields","span","offset","align","danger","type","icon","ArrowLeftOutlined","onClick","backToChange","ArrowRightOutlined","submitOrder","reviewOrder","NewBookingTranslated","withTranslation","UpdateBooking","selectedRowKeys","columns","dataIndex","data","onSelectChange","rowSelection","selections","Table","SELECTION_ALL","SELECTION_NONE","push","key","reference_number","collection_date","collection_timeslot","collection_branch","submitForm","dataSource","bordered","pagination","pageSize","scroll","y","UpdateBookingTranslated","ImportantNotes","ImportantNotesTranslated","Header","Content","TabPane","Tabs","Tab","defaultActiveKey","TabTranslated","Captcha","navigate","captchaInput","verifyButtonLoader","reloadCaptchaLoader","lang","changeLanguageHandler","changeLanguage","setTimeout","to","path","exact","defaultValue","event","LoadingOutlined","fontSize","spin","src","alt","shape","ReloadOutlined","refreshCaptcha","block","length","loading","verifyCaptcha","CaptchaTranslated","App","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.37346ed6.chunk.js","sourcesContent":["import i18n from \"i18next\";\r\nimport { initReactI18next } from \"react-i18next\";\r\nimport en from \"./en\";\r\nimport zh from \"./zh\";\r\n\r\nexport interface I18NConfig {\r\n  user: {\r\n    login: String;\r\n    signup: String;\r\n    username_placeholder: String;\r\n    password_placeholder: String;\r\n    image_url: String;\r\n  };\r\n}\r\n\r\nconst resources = {\r\n  en: {\r\n    translation: en,\r\n  },\r\n  zh: {\r\n    translation: zh,\r\n  },\r\n};\r\n\r\ni18n\r\n  .use(initReactI18next)\r\n  .init({ resources: resources as any, lng: navigator.language });\r\n\r\nexport default i18n;","const en = {\r\n    captcha: {\r\n        header: 'Type the verification code (in Capital Letters)',\r\n        placeholder: 'Verification Code',\r\n        button: 'Verify to Proceed',\r\n        selectOptions: {\r\n            English: 'English',\r\n            Chinese: 'Chinese'\r\n        }\r\n    },\r\n    tab: {\r\n        new_booking: 'Booking',\r\n        update_booking: 'Enquiry/Cancel'\r\n    },\r\n    importantNotes: {\r\n        title: 'Important Notes',\r\n        1: 'Each client can only submit one pre-order application.',\r\n        2: 'A confirmation email or SMS will be sent to the client upon successful registration; The client is required to present the Confirmation Email or SMS of the reservation upon arrival at the selected branch at specified collection timeslot for identification and verification purposes. The Bank reserves the right to reject the confirmed reservation if the customer is not able to present the Email or SMS. The reservation will be cancelled if the client who arrives 10 minutes late for the banknotes exchange services.'\r\n    },\r\n    new_booking: {\r\n        header: 'Chinese New Year Banknotes Booking',\r\n        hint: 'Please fill in the below ordering form to complete the registration',\r\n        button: {\r\n            back: 'Back',\r\n            submit: 'Submit',\r\n            review: 'Review Order'\r\n        }\r\n    },\r\n    update_booking: {\r\n        mobile: 'Mobile Number',\r\n        email: 'Email Address',\r\n        button: 'Submit'\r\n    },\r\n    forms: {\r\n\r\n    },\r\n    review_orders: {\r\n\r\n    },\r\n    response: {\r\n\r\n    }\r\n};\r\nexport default en;","const zh = {\r\n    captcha: {\r\n        header: '键入验证代码（大写字母)',\r\n        placeholder: '验证代码',\r\n        button: '验证继续',\r\n        selectOptions: {\r\n            English: '英语',\r\n            Chinese: '中文'\r\n        }\r\n    },\r\n    tab: {\r\n        new_booking: '预订',\r\n        update_booking: '查询/取消'\r\n    },\r\n    importantNotes: {\r\n        title: '重要说明',\r\n        1: '每个客户端只能提交一个预购申请.',\r\n        2: '注册成功后，将向客户发送确认电子邮件或短信; 客户必须在到达指定的收集时段到达选定的分支机构时出示预订确认电子邮件或短信，以便进行识别和验证. 如果客户无法提交电子邮件或短信，银行保留拒绝已确认预订的权利. 如果客户延迟 10 分钟到达进行钞票兑换服务，则预订将被取消.'\r\n    },\r\n    new_booking: {\r\n        header: '中国新年钞票预订',\r\n        hint: '请填写以下订购表以完成注册',\r\n        button: {\r\n            back: '返回',\r\n            submit: '提交',\r\n            review: '审核订单'\r\n        }\r\n    },\r\n    update_booking: {\r\n        mobile: '移动号码',\r\n        email: '电子邮件地址',\r\n        button: '提交'\r\n    },\r\n    review_orders: {\r\n\r\n    },\r\n    response: {\r\n\r\n    }\r\n};\r\nexport default zh;","import './form.scss';\r\n\r\nimport { Row, Form, Input, Select, DatePicker, Space, Checkbox } from 'antd';\r\nimport { Component } from 'react';\r\nconst { Option } = Select;\r\n\r\nclass Forms extends Component {\r\n    props: any = this.props;\r\n    state = { info: true, termsCondition: true };\r\n    render() {\r\n        return (\r\n            <div className='form'>\r\n                <div className=\"title\">{this.props.status === 'review' ? 'Review of ' : ''}Order Details</div>\r\n                <Form layout=\"vertical\" fields={this.props.fields}\r\n                    onFieldsChange={(_, allFields) => {\r\n                        this.props.onChange(allFields);\r\n                    }} form={this.props.form}>\r\n                    <Row>\r\n                        <Space>\r\n                            <Form.Item name='title' label=\"Title\" rules={[{ required: true, message: 'Username is required!' }]}>\r\n                                <Select disabled={this.props.status === 'review'} size=\"large\" placeholder=\"Please Select...\">\r\n                                    <Option value=\"Mr.\">Mr.</Option>\r\n                                    <Option value=\"Mrs.\">Mrs.</Option>\r\n                                </Select>\r\n                            </Form.Item>\r\n                            <Form.Item name='firstName' label=\"First Name\" rules={[{ required: true, message: 'Username is required!' }]}>\r\n                                <Input disabled={this.props.status === 'review'} size=\"large\" placeholder=\"First Name\" />\r\n                                {\r\n                                    false && <span className=\"ant-form-text\">First Name</span>\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item name='lastName' label=\"Last Name\" rules={[{ required: true, message: 'Username is required!' }]}>\r\n                                <Input disabled={this.props.status === 'review'} size=\"large\" placeholder=\"Last Name\" />\r\n                                {\r\n                                    false && <span className=\"ant-form-text\">Last Name</span>\r\n                                }\r\n                            </Form.Item>\r\n                        </Space>\r\n                    </Row>\r\n                    <Row>\r\n                        <Space>\r\n                            <Form.Item name='mobileNumber' label=\"Mobile Number\" rules={[{ required: true, message: 'Username is required!' }]}>\r\n                                <Input disabled={this.props.status === 'review'} size=\"large\" placeholder=\"Mobile Number\" />\r\n                                {\r\n                                    false && <span className=\"ant-form-text\">Mobile Number</span>\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item name='emailAddress' label=\"Email Address\" rules={[{ required: true, message: 'Username is required!' }]}>\r\n                                <Input disabled={this.props.status === 'review'} size=\"large\" placeholder=\"Email Address\" />\r\n                                {\r\n                                    false && <span className=\"ant-form-text\">Email Address</span>\r\n                                }\r\n                            </Form.Item>\r\n                        </Space>\r\n                    </Row>\r\n                    <Row>\r\n                        <Space>\r\n                            <Form.Item name='collectionBranch' label=\"Collection Branch\" rules={[{ required: true, message: 'Username is required!' }]}>\r\n                                <Select disabled={this.props.status === 'review'} size=\"large\" placeholder=\"Please Select...\">\r\n                                    {['1', '2', '3', '4', '5', '6', '7', '8'].map((i) => <Option value={i} >Branch {i}</Option>)}\r\n                                </Select>\r\n                            </Form.Item>\r\n                            <Form.Item name='collectionDate' label=\"Collection Date\" rules={[{ required: true, message: 'Username is required!' }]}>\r\n                                <DatePicker disabled={this.props.status === 'review'} size=\"large\"\r\n                                    style={{\r\n                                        width: '100%',\r\n                                    }}\r\n                                />\r\n                            </Form.Item>\r\n                            <Form.Item name='collectionTimeslot' label=\"Collection Timeslot\" rules={[{ required: true, message: 'Username is required!' }]}>\r\n                                <Select disabled={this.props.status === 'review'} size=\"large\" placeholder=\"Please Select...\">\r\n                                    <Option value=\"10-11\">10.00 AM - 11.00 AM</Option>\r\n                                    <Option value=\"11-12\">11.00 AM - 12.00 PM</Option>\r\n                                    <Option value=\"12-13\">12.00 PM - 01.00 PM</Option>\r\n                                    <Option value=\"14-15\">02.00 PM - 03.00 PM</Option>\r\n                                    <Option value=\"15-16\">03.00 PM - 04.00 PM</Option>\r\n                                    <Option value=\"16-17\">04.00 PM - 05.00 PM</Option>\r\n                                    <Option value=\"17-18\">05.00 PM - 06.00 PM</Option>\r\n                                    <Option value=\"18-19\">06.00 PM - 07.00 PM</Option>\r\n                                    <Option value=\"19-20\">07.00 PM - 08.00 PM</Option>\r\n                                </Select>\r\n                            </Form.Item>\r\n                        </Space>\r\n                    </Row>\r\n                    <Row>\r\n                        <Space>\r\n                            <Form.Item label=\"Quantity\">\r\n                                <Space direction='vertical'>\r\n                                    <span className=\"ant-form-text\">1</span>\r\n                                    <span className=\"ant-form-text\">Total value per pack: HK$3,000. (Denomination: HK$20 x 100pcs, HK$50 x 20pcs)</span>\r\n                                </Space>\r\n                            </Form.Item>\r\n                            <Form.Item label=\"Declaration\">\r\n                                <Space direction='vertical'>\r\n                                    <Checkbox checked={this.state.info} onChange={(e) => this.setState({ info: e.target.checked })}>I confirm the above information is accurate to my knowledge. No amendment is allowed once the form is submitted</Checkbox>\r\n                                    <Checkbox checked={this.state.termsCondition} onChange={(e) => this.setState({ termsCondition: e.target.checked })}>I have read, understood and agreed to the terms and conditions of this application</Checkbox>\r\n                                </Space>\r\n                            </Form.Item>\r\n                        </Space>\r\n                    </Row>\r\n                </Form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Forms;","import './new-booking.scss';\r\n\r\nimport { Layout, Button, Row, Col, Space } from 'antd';\r\nimport { ArrowLeftOutlined, ArrowRightOutlined } from '@ant-design/icons';\r\nimport { Component } from 'react';\r\nimport Forms from '../../form/form';\r\nimport { withTranslation } from 'react-i18next';\r\n\r\nconst { Footer } = Layout;\r\n\r\nconst formControls = [\r\n    { name: ['title'], value: null, required: true, disabled: false },\r\n    { name: ['firstName'], value: null, required: true, disabled: false },\r\n    { name: ['lastName'], value: null, required: true, disabled: false },\r\n    { name: ['mobileNumber'], value: null, required: true, disabled: false },\r\n    { name: ['emailAddress'], value: null, required: true, disabled: false },\r\n    { name: ['collectionBranch'], value: null, required: true, disabled: false },\r\n    { name: ['collectionDate'], value: null, required: true, disabled: false },\r\n    { name: ['collectionTimeslot'], value: null, required: true, disabled: false }\r\n]\r\n\r\nclass NewBooking extends Component {\r\n    form: any;\r\n    state = { fields: formControls, orderStatus: \"change\" };\r\n\r\n    submitOrder(fields: any) {\r\n        console.log(fields);\r\n    }\r\n\r\n    reviewOrder(fields: any) {\r\n        this.setState({ orderStatus: 'review' });\r\n        fields = formControls.map((f: any) => { f.disabled = true; return f });\r\n        this.setState({ fields });\r\n    }\r\n\r\n    backToChange() {\r\n        this.setState({ orderStatus: 'change' });\r\n    }\r\n    render() {\r\n        const { t }: any = this.props;\r\n        return (\r\n            <span>\r\n                <Forms form={this.form} fields={this.state.fields} status={this.state.orderStatus} onChange={(newFields: any) => { this.setState({ fields: newFields }); }} />\r\n                <Footer>\r\n                    <Row className='footer-row'>\r\n                        <Col span={4} offset={20}>\r\n                            <Row>\r\n                                {\r\n                                    this.state.orderStatus === 'review' &&\r\n                                    <Space align='end'>\r\n                                        <Col span={12}>\r\n                                            <Button danger type='primary' icon={<ArrowLeftOutlined />} onClick={() => this.backToChange()}>{t('new_booking.button.back')}</Button>\r\n                                        </Col>\r\n                                        <Col span={12}>\r\n                                            <Button className='review-btn' type='primary' icon={<ArrowRightOutlined />} onClick={() => this.submitOrder(this.state.fields)}>{t('new_booking.button.submit')}</Button>\r\n                                        </Col>\r\n                                    </Space>\r\n                                }\r\n                                {\r\n                                    this.state.orderStatus === 'change' &&\r\n                                    <Col span={16} offset={8}>\r\n                                        <Button className='submit-btn' type='primary' icon={<ArrowRightOutlined />} onClick={() => this.reviewOrder(this.state.fields)}>{t('new_booking.button.review')}</Button>\r\n                                    </Col>\r\n                                }\r\n                            </Row>\r\n                        </Col>\r\n                    </Row>\r\n                </Footer>\r\n            </span>\r\n        );\r\n    }\r\n}\r\n\r\nconst NewBookingTranslated = withTranslation()(NewBooking);\r\n\r\nexport default NewBookingTranslated;\r\n","import './update-booking.scss';\r\n\r\nimport { Component } from \"react\";\r\nimport { Button, Col, Form, Input, Row, Space, Table } from 'antd';\r\nimport { ArrowRightOutlined } from '@ant-design/icons';\r\nimport { withTranslation } from 'react-i18next';\r\n\r\nclass UpdateBooking extends Component {\r\n    state = { email: null, mobile: null, selectedRowKeys: [] };\r\n\r\n    submitForm() {\r\n        console.log(this.state);\r\n    }\r\n\r\n    columns = [\r\n        {\r\n            title: 'Collection Date',\r\n            dataIndex: 'collection_date'\r\n        },\r\n        {\r\n            title: 'Collection Timeslot',\r\n            dataIndex: 'collection_timeslot'\r\n        },\r\n        {\r\n            title: 'Collection Branch',\r\n            dataIndex: 'collection_branch'\r\n        },\r\n        {\r\n            title: 'Reference Number',\r\n            dataIndex: 'reference_number'\r\n        }\r\n    ];\r\n\r\n    data: any = [];\r\n\r\n    onSelectChange = (selectedRowKeys: any) => {\r\n        this.setState({ selectedRowKeys });\r\n        this.rowSelection.selectedRowKeys = selectedRowKeys;\r\n    };\r\n\r\n    rowSelection = {\r\n        selectedRowKeys: [],\r\n        onChange: this.onSelectChange,\r\n        selections: [\r\n            Table.SELECTION_ALL,\r\n            Table.SELECTION_NONE\r\n        ]\r\n    };\r\n\r\n    render() {\r\n        for (let i = 0; i < 150; i++) {\r\n            this.data.push({\r\n                key: i,\r\n                reference_number: i,\r\n                collection_date: i,\r\n                collection_timeslot: `Edward King ${i}`,\r\n                collection_branch: 32\r\n            });\r\n        }\r\n        const { t }: any = this.props;\r\n        return (\r\n            <Row>\r\n                <Col span={10}>\r\n                    <Form className='update-booking' layout=\"horizontal\">\r\n                        <Space direction=\"vertical\">\r\n                            <Form.Item name='mobileNumber' label={t('update_booking.mobile')}>\r\n                                <Input size=\"large\" placeholder={t('update_booking.mobile')} onChange={(e) => this.setState({ mobile: e.target.value })} />\r\n                            </Form.Item>\r\n                            or\r\n                            <Form.Item name='emailAddress' label={t('update_booking.email')}>\r\n                                <Input size=\"large\" placeholder={t('update_booking.email')} onChange={(e) => this.setState({ email: e.target.value })} />\r\n                            </Form.Item>\r\n                            <Col className='submit-button' span={8} offset={16}>\r\n                                <Button className='submit-btn' type=\"primary\" disabled={!this.state.email && !this.state.mobile} icon={<ArrowRightOutlined />} onClick={() => this.submitForm()}>{t('update_booking.button')}</Button>\r\n                            </Col>\r\n                        </Space>\r\n                    </Form>\r\n                </Col>\r\n                <Col span={14}>\r\n                    <Table rowSelection={this.rowSelection} columns={this.columns} dataSource={this.data} size=\"small\" bordered pagination={{ pageSize: 10 }} scroll={{ y: 165 }} />\r\n                </Col>\r\n            </Row>\r\n        );\r\n    }\r\n}\r\n\r\nconst UpdateBookingTranslated = withTranslation()(UpdateBooking);\r\n\r\nexport default UpdateBookingTranslated;\r\n","import { Component } from 'react';\r\nimport { withTranslation } from 'react-i18next';\r\nimport './important-notes.scss';\r\n\r\nclass ImportantNotes extends Component {\r\n    render() {\r\n        const { t }: any = this.props;\r\n        return (\r\n            <div className='important-notes'>\r\n                <div className=\"title\">{t('importantNotes.title')}</div>\r\n                <ol>\r\n                    <li>{t(`importantNotes.1`)}</li>\r\n                    <li>{t(`importantNotes.2`)}</li>\r\n                </ol>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst ImportantNotesTranslated = withTranslation()(ImportantNotes);\r\n\r\nexport default ImportantNotesTranslated;","import './tab.scss';\r\n\r\nimport { Layout, Tabs } from 'antd';\r\nimport NewBooking from './new-booking/new-booking';\r\nimport UpdateBooking from './update-booking/update-booking';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { Component } from 'react';\r\nimport ImportantNotesTranslated from '../important-notes/important-notes';\r\n\r\nconst { Header, Content } = Layout;\r\nconst { TabPane } = Tabs;\r\n\r\nclass Tab extends Component {\r\n    render() {\r\n        const { t }: any = this.props;\r\n        return (\r\n            <Layout>\r\n                <Header>\r\n                    <div className='header'>{t('new_booking.header')}</div>\r\n                    <div>{t('new_booking.hint')}</div>\r\n                </Header>\r\n                <Content>\r\n                    <ImportantNotesTranslated />\r\n                    <Tabs defaultActiveKey=\"new\">\r\n                        <TabPane tab={t('tab.new_booking')} key=\"new\">\r\n                            <NewBooking />\r\n                        </TabPane>\r\n                        <TabPane tab={t('tab.update_booking')} key=\"cancellationAndEnquiries\">\r\n                            <UpdateBooking />\r\n                        </TabPane>\r\n                    </Tabs>\r\n                </Content>\r\n            </Layout>\r\n        );\r\n    }\r\n}\r\n\r\nconst TabTranslated = withTranslation()(Tab);\r\n\r\nexport default TabTranslated;\r\n","import './Captcha.scss';\r\nimport { Component } from \"react\";\r\nimport { Button, Input, Layout, Select } from 'antd';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { ReloadOutlined, LoadingOutlined } from '@ant-design/icons';\r\nimport { withTranslation } from 'react-i18next';\r\nimport i18n from '../../wrappers/i18n/i18n';\r\nconst { Content } = Layout;\r\nconst { Option } = Select;\r\n\r\nclass Captcha extends Component {\r\n    state: any = { navigate: false, captchaInput: '', verifyButtonLoader: false, reloadCaptchaLoader: false, captcha: 'https://www.technotification.com/wp-content/uploads/2014/12/captcha.jpg', lang: 'en' };\r\n\r\n    constructor(props?: any) {\r\n        super(props);\r\n        this.changeLanguageHandler('en');\r\n    }\r\n\r\n    changeLanguageHandler(lang: any) {\r\n        this.setState({ lang });\r\n        i18n.changeLanguage(lang);\r\n    }\r\n\r\n    refreshCaptcha() {\r\n        this.setState({ reloadCaptchaLoader: true });\r\n        this.setState({ captcha: '' });\r\n        setTimeout(() => {\r\n            this.setState({ reloadCaptchaLoader: false });\r\n            this.setState({ captcha: 'https://www.technotification.com/wp-content/uploads/2014/12/captcha.jpg' });\r\n        }, 2000);\r\n    }\r\n\r\n    verifyCaptcha() {\r\n        this.setState({ verifyButtonLoader: true });\r\n        setTimeout(() => {\r\n            this.setState({ verifyButtonLoader: false });\r\n            this.setState({ navigate: true });\r\n        }, 2000);\r\n    }\r\n\r\n    render() {\r\n        const { t }: any = this.props;\r\n        if (this.state.navigate) {\r\n            return <Redirect to=\"/booking\" path=\"/booking\" exact={true} />\r\n        }\r\n        return (\r\n            <Layout className=\"captcha\">\r\n                <Content>\r\n                    <Select defaultValue={this.state.lang} onChange={(event) => this.changeLanguageHandler(event)}>\r\n                        <Option value=\"en\">{t('captcha.selectOptions.English')}</Option>\r\n                        <Option value=\"zh\">{t('captcha.selectOptions.Chinese')}</Option>\r\n                    </Select>\r\n                    <div className=\"block\">\r\n                        <div>{t('captcha.header')}</div>\r\n                        {\r\n                            this.state.reloadCaptchaLoader && !this.state.captcha &&\r\n                            <LoadingOutlined style={{ fontSize: 24 }} spin />\r\n                        }\r\n                        {\r\n                            !this.state.reloadCaptchaLoader && this.state.captcha &&\r\n                            <div className='captcha-img'>\r\n                                <img src={this.state.captcha} alt=\"Captcha\" />\r\n                                <Button className='img-reload' shape=\"circle\" icon={<ReloadOutlined />} onClick={() => this.refreshCaptcha()}></Button>\r\n                            </div>\r\n                        }\r\n                        <Input placeholder={t('captcha.placeholder')} onChange={(e) => this.setState({ captchaInput: e.target.value })} />\r\n                        <Button block disabled={this.state.captchaInput?.length !== 6} loading={this.state.verifyButtonLoader} onClick={() => this.verifyCaptcha()}>{t('captcha.button')}</Button>\r\n                    </div>\r\n                </Content>\r\n            </Layout>\r\n        )\r\n    }\r\n}\r\n\r\nconst CaptchaTranslated = withTranslation()(Captcha);\r\n\r\nexport default CaptchaTranslated;","import './App.scss';\n\nimport { Component } from 'react';\nimport Tab from './components/tab/tab';\nimport Captcha from './components/captcha/Captcha';\n\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nclass App extends Component {\n  render() {\n    return (\n      <span>\n        \n      <Router>\n        <Route path=\"/booking\" component={Tab} />\n        <Route path=\"\" component={Captcha} />\n      </Router>\n      </span>\n    );\n  }\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport \"./wrappers/i18n/i18n\";\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}