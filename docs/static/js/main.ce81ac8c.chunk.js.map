{"version":3,"sources":["wrappers/i18n/i18n.tsx","wrappers/i18n/en.tsx","wrappers/i18n/zh.tsx","services/common-http.service.tsx","components/form/form.tsx","components/tab/review-booking/review-booking.tsx","components/modal.tsx","components/tab/new-booking/new-booking.tsx","components/tab/update-booking/update-booking.tsx","components/tab/tab.tsx","components/important-notes/important-notes.tsx","components/captcha/Captcha.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["resources","en","translation","captcha","header","placeholder","button","selectOptions","English","Chinese","TechnicalError","Maintenance","Thankyou","Error","tab","new_booking","update_booking","importantNotes","title","hint","back","submit","review","refnumber","booking_success","mobile","email","cancelbutton","cancel_success","norecordfound","forms","modal","review_orders","response","zh","i18n","use","initReactI18next","init","lng","navigator","language","require","config","APPURL","process","CommonHttpService","uuid","url","lang","console","log","this","fetch","method","headers","then","json","body","JSON","stringify","SC_CLIENT_CONTEXT","uuidv4","content","Modal","image","onOk","changeLanguage","OptGroup","Select","Option","Forms","props","form","state","datesLoaded","datesLoading","info","termsCondition","branchList","branchSelected","dateList","collectionTimeSlots","service","allFields","fields","getBranchList","get","res","setState","getValue","getDateList","catch","err","event","value","data","slots","date","_","format","status","slotTime","e","field","fieldData","onChange","target","test","key","t","className","id","layout","Item","name","label","rules","required","message","size","defaultValue","setData","Group","compact","style","width","disabled","maxLength","validate","labelInValue","Object","entries","map","k","v","d","code","chineseName","length","disabledDate","getTimeSlots","dt","direction","checked","Component","FormsTranslated","withTranslation","ReviewBooking","selectedRowKeys","mobileSearch","loadingAppointment","appointmentData","find","moment","span","push","pull","ReviewBookingTranslated","ModalComponent","isModalVisible","visible","onCancel","footer","type","onClick","ModalComponentTranslated","Footer","Layout","formControls","NewBooking","bookingProgress","refNo","orderStatus","showModal","modalMsg","undefined","validateCaptcha","getBranchCode","post","result","navigate","error","newFields","offset","align","danger","icon","ArrowLeftOutlined","backToChange","disableButton","ArrowRightOutlined","submitOrder","reviewOrder","CheckCircleTwoTone","fontSize","twoToneColor","NewBookingTranslated","dateFormat","UpdateBooking","mobileNumber","rowSelected","selectedRows","onSelectChange","rowSelection","columns","dataIndex","bind","getAppointmentData","el","cancelAppointment","attributes","verifyButtonLoader","i","reference_number","collection_date","collection_timeslot","collection_branch","autoFocus","onPressEnter","getAppointments","locale","emptyText","dataSource","bordered","scroll","y","UpdateBookingTranslated","Header","Content","TabPane","Tabs","Tab","defaultActiveKey","TabTranslated","ImportantNotes","ImportantNotesTranslated","Captcha","captchaInput","reloadCaptchaLoader","changeLanguageHandler","getStatus","setLanguage","paramValue","toLowerCase","refreshCaptcha","captchainvalid","setUUID","toUpperCase","propsdata","src","alt","GlobalOutlined","shape","ReloadOutlined","verifyCaptcha","block","CaptchaTranslated","App","path","component","to","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ce81ac8c.chunk.js","sourcesContent":["import i18n from \"i18next\";\nimport { initReactI18next } from \"react-i18next\";\nimport en from \"./en\";\nimport zh from \"./zh\";\n\nexport interface I18NConfig {\n  user: {\n    login: String;\n    signup: String;\n    username_placeholder: String;\n    password_placeholder: String;\n    image_url: String;\n  };\n}\n\nconst resources = {\n  en: {\n    translation: en,\n  },\n  zh: {\n    translation: zh,\n  },\n};\n\ni18n\n  .use(initReactI18next)\n  .init({ resources: resources as any, lng: navigator.language });\n\nexport default i18n;","const en = {\n    captcha: {\n        header: 'Type the verification code (in Capital Letters)',\n        placeholder: 'Verification Code',\n        button: 'Verify to Proceed',\n        selectOptions: {\n            English: '中文',\n            Chinese: 'Chinese'\n        },\n        TechnicalError: 'This service is temporarily unavailable for system maintenance. Please try again later. Apologies for the'\n        +' inconvenience caused',\n        Maintenance: 'This service is temporarily unavailable for system maintenance. Please try again later. Apologies for the'\n        +' inconvenience caused',\n        Thankyou: 'Thank you for your interest for this service, however our new banknotes reservation are fully booked. Please visit our branches'\n        +' for assistance.',\n        Error: 'The verification code you entered is incorrect, please retry.'\n    },\n    tab: {\n        new_booking: 'Booking',\n        update_booking: 'Enquiry/Cancel'\n    },\n    importantNotes: {\n        title: 'Important Notes',\n        1: ' All Online Pre-orders, once submitted, cannot be amended.',\n        2: ' No express queue will be arranged for the collection of banknotes pre-ordered online.',\n        3: 'Clients, when collecting the banknote(s), may instruct the Bank to debit the total sum from the his/her personal bank account or by exchanging the same amount of old banknote(s) (in Hong Kong currency) at the collection counters.',\n        4: 'Clients must check the conditions of the banknote(s) at the counters of the Designated Collection Branch as shown above. Replacement of the banknote(s) will only be arranged if found damaged at the time of collection. Requests for replacement of the banknote(s) will not be accepted after the clients have left the collection counters.',\n        5: 'lf a client does not collect the banknote(s) at the Designated Collection Branch and on the Designated Collection Date, or fails to collect the banknote(s)in accordance with the terms and conditions provided, the Bank will not keep the banknote(s) for the client. The client shall be deemed to have forgone the right to collect the banknote(s) and that the Bank will dispose of the uncollected banknote(s) at its absolute discretion.',\n        6: 'Unless otherwise stated, any reference to a date in the terms and conditions only refers to the normal business hours of the Bank on such date, and does not include any time within which a tropical cyclone warning signal number 8 or above, a Black Rainstorm warning signal, is in force in Hong Kong.',\n        7: 'Every mobile number can only register for one pack of new banknotes per day.'\n    },\n    new_booking: {\n        header: 'Chinese New Year New Banknotes Booking',\n        hint: 'Please fill in the below ordering form to complete the registration',\n        button: {\n            back: 'Back',\n            submit: 'Submit',\n            review: 'Review Order'\n        },\n        refnumber: 'Your Reference Number is',\n        booking_success: 'Thanks for your submission of this pre-order form: A sms confirmation will be sent to your mobile number provided in this form.'\n    },\n    update_booking: {\n        mobile: 'Mobile Number',\n        email: 'Email Address',\n        button: 'Submit',\n        cancelbutton: 'Cancel Appointment',\n        cancel_success: 'Your selected booking has been cancelled. A sms confirmation will be sent to your mobile number provided in this form.',\n        norecordfound: 'No Appointments found for this mobile number : '\n    },\n    forms: {\n        'SelectPlaceholder': 'Please Select...',\n        'Title': 'Title',\n        'LastName': 'Last Name',\n        'MobileNumber': 'Mobile Number',\n        'CollectionBranch': 'Collection Branch',\n        'CollectionDate': 'Collection Date',\n        'CollectionTimeslot': 'Collection Timeslot',\n        'Quantity': 'Quantity',\n        'Declaration': 'Declaration',\n        'QuantityText': 'Total value per pack: HK$3,000. (Denomination: HK$20 x 100pcs, HK$50 x 20pcs)',\n        'DeclarationPoints': {\n            1: 'I confirm the above information is accurate to my knowledge. No amendment is allowed once the form is submitted',\n            2: 'I have read, understood and agreed to the terms and conditions of this application'\n        },\n        \"regionThree\": \"---- New Territories ---- \",\n        \"regionTwo\": \"---- Kowloon  ---- \",\n        \"regionOne\": \"---- Hong Kong ----\",\n        \"salutationOne\": \"Mr.\",\n        \"salutationTwo\": \"Mrs.\",\n        \"salutationThree\": \"Miss\",\n        'noslotsavailable': 'All slots are full please select different branch'\n\n    },\n    modal:{\n        'okbutton': 'Ok'\n    },\n    review_orders: {\n\n    },\n    response: {\n\n    }\n};\nexport default en;","const zh = {\n    captcha: {\n        header: '键入验证代码（大写字母)',\n        placeholder: '验证代码',\n        button: '验证继续',\n        selectOptions: {\n            English: 'EN',\n            Chinese: 'EN'\n        },\n        TechnicalError: '暫時未能提供服務，請稍後再試。如有不便，敬請原諒。',\n        Maintenance: '暫時未能提供服務，請稍後再試。如有不便，敬請原諒。',\n        Thankyou: '多謝閣下對此服務的興趣。 由於網上預訂鈔票反應熱烈，全部網上配額已被預訂。如需協助，請到臨我們的分行。',\n        Error: \"您所輸入的驗證碼不正確，請重新輸入。\"\n    },\n    tab: {\n        new_booking: '预订',\n        update_booking: '查询/取消'\n    },\n    importantNotes: {\n        title: '重要事項:',\n        1: '所有網上預定申請一經提交，不得修改。',\n        2: '指定領鈔分行並不會安排快捷櫃檯予客戶領取鈔票。',\n        3: '客戶可指示銀行從個人銀行賬戶中扣除全部兌換金額，或在櫃檯兌換相同數值的舊鈔票（港幣），從而領取鈔票。',\n        4: '客戶應在指定領鈔分行的櫃檯查看鈔票的狀況。更換鈔票只能在領鈔時發現損壞的情況下進行安排。客戶離開領鈔櫃檯後，本行將不接受更換鈔票的要求。',\n        5: '如客戶沒有在指定領鈔分行和指定日期領取鈔票，或未按照規定的條款和細則領取鈔票，本行將不會為客戶保留鈔票。客戶將被視為已經放棄收取鈔票的權利，本行將自行決定處置未領取的鈔票。',\n        6: '除另有說明外，凡於條款及細則內提及的日期，僅指本行於該日期的正常營業時間，並不包括當香港發出8號或以上熱帶氣旋警告信號或黑色暴雨警告信號時之任何時間。',\n        7: '每個手機號碼在每天只能預訂一套套裝新鈔票。'\n    },\n    new_booking: {\n        header: '網上預訂新鈔票',\n        hint: '请填写以下订购表以完成注册',\n        button: {\n            back: '返回',\n            submit: '提交',\n            review: '审核订单'\n        }\n    },\n    update_booking: {\n        mobile: '移动号码',\n        email: '电子邮件地址',\n        button: '提交'\n    },forms: {\n        'SelectPlaceholder': 'Please Select...',\n        'Title': 'Title',\n        'LastName': 'Last Name',\n        'MobileNumber': 'Mobile Number',\n        'CollectionBranch': 'Collection Branch',\n        'CollectionDate': 'Collection Date',\n        'CollectionTimeslot': 'Collection Timeslot',\n        'Quantity': 'Quantity',\n        'Declaration': 'Declaration',\n        'QuantityText': 'Total value per pack: HK$3,000. (Denomination: HK$20 x 100pcs, HK$50 x 20pcs)',\n        'DeclarationPoints': {\n            1: 'I confirm the above information is accurate to my knowledge. No amendment is allowed once the form is submitted',\n            2: 'I have read, understood and agreed to the terms and conditions of this application'\n        },\n        \"regionThree\": \"---- New Territories ---- \",\n        \"regionTwo\": \"---- Kowloon  ---- \",\n        \"regionOne\": \"---- Hong Kong ----\"\n    },\n    review_orders: {\n\n    },\n    response: {\n\n    }\n};\nexport default zh;","import { Empty, Modal } from 'antd';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport i18n from '../wrappers/i18n/i18n';\r\n\r\nrequire('dotenv').config();\r\n\r\n\r\nconst APPURL = `${process.env.REACT_APP_HOST_URL || 'http://localhost:9090'}/origination/api/v3/cnynotes`;\r\nexport class CommonHttpService {\r\n    language: any;\r\n    uuid: any;\r\n    get(url: string, uuid: any, lang: any) {\r\n        console.log(\"language from captcha is:\" + this.language)\r\n        return fetch(`${APPURL}${url}`, {\r\n            method: 'GET',\r\n            headers: this.headers(uuid, lang)\r\n        }).then(response => response.json())\r\n    }\r\n\r\n    post(url: string, body: any, uuid: any, lang: any) {\r\n        console.log(\"language from captcha is:\" + this.language)\r\n        return fetch(`${APPURL}${url}`, {\r\n            method: 'POST',\r\n            headers: this.headers(uuid, lang),\r\n            body: JSON.stringify(body)\r\n        }).then(response => response)\r\n    }\r\n\r\n    headers(uuid: any, lang: any) {\r\n        let headers: any = {};\r\n        headers[\"Content-Type\"] = \"application/json\";\r\n        headers[\"Accept\"] = \"application/json\";\r\n        let SC_CLIENT_CONTEXT = {\r\n            \"reqId\": `${uuidv4()}`,\r\n            \"Channel\": \"Web\",\r\n            \"Country\": \"HK\",\r\n            \"Language\": lang,\r\n            \"AppName\": \"RCWB\",\r\n            \"ClientId\": \"WEB\",\r\n            \"RumDevice\": \"devicebrowserversion\",\r\n            \"appVersion\": \"1.0\",\r\n            \"userId\": uuid,\r\n            \"releaseVersion\": \"cnynotes\"\r\n        };\r\n        headers[\"SC-CLIENT-CONTEXT\"] = JSON.stringify(SC_CLIENT_CONTEXT);\r\n        return headers;\r\n    };\r\n\r\n\r\n    modal(method: 'info' | 'success' | 'error' | 'warning' | 'confirm', title: any, content: any) {\r\n        Modal[method]({\r\n            title,\r\n            content: (\r\n                <Empty image=\"/assets/images/modal/info.svg\" />\r\n            ),\r\n            onOk() { console.log('on Ok') }\r\n          });\r\n    }\r\n\r\n    setLanguage(lang: string) {\r\n        this.language = lang;\r\n        i18n.changeLanguage(this.language);\r\n    }\r\n\r\n    setUUID(uuid: string) {\r\n        this.uuid = uuid;\r\n        i18n.changeLanguage(this.language);\r\n    }\r\n}","import './form.scss';\n\nimport { Form, Input, Select, DatePicker, Space, Checkbox } from 'antd';\nimport { Component } from 'react';\nimport { CommonHttpService } from '../../services/common-http.service';\nimport * as _ from 'lodash';\nimport { withTranslation } from 'react-i18next';\nconst { OptGroup, Option } = Select;\n\n\nclass Forms extends Component {\n    props: any = this.props;\n    form: any;\n    state = {datesLoaded: false, datesLoading: false , info: true, termsCondition: true, mobile: '', branchList: {}, branchSelected: '', dateList: [], collectionTimeSlots: [] };\n    service = new CommonHttpService();\n\n    constructor(props?: any) {\n        super(props);\n        props = this.props;\n        console.log(\"uuid in constructor:\"+this.props.uuid)\n    }\n    \n    \n    componentDidMount() {\n        // this.setState({ info: true, termsCondition: true, mobile: '', branchList: {}, branchSelected: '', dateList: [], collectionTimeSlots: [] });\n        this.getBranchList();\n    }\n\n    getBranchList() {\n        console.log(\"uuid is:\"+this.props.uuid)\n        this.service.get(`/branchlist/${this.props.uuid}`,this.props.uuid,this.props.lang).then((res) => {\n            this.setState({ branchList: res });\n            if (this.getValue('collectionBranch')) {\n                this.getDateList(this.getValue('collectionBranch'));\n            }\n        }).catch((err) => {\n            console.log(err);\n        });\n    }\n\n    getDateList(event: any) {\n        this.setState({datesLoading: true})\n        this.service.get(`/slots/${event.value}/${this.props.uuid}`,this.props.uuid,this.props.lang).then((res) => {\n            this.setState({datesLoading: false})\n            this.setState({ dateList: res.data.slots });\n            this.setState({datesLoaded: true});\n        }).catch((err) => {\n            console.log(err);\n        });\n    }\n\n    disabledDate(event: any) {\n        const date: any = event ? _.find(this.state.dateList, ['slot-date', event.format('DD/MM/YYYY')]) : null;\n        return !date || (date && !date.status);\n    }\n\n    getTimeSlots(event: any) {\n        const date: any = event ? _.find(this.state.dateList, ['slot-date', event.format('DD/MM/YYYY')]) : null;\n        if (date && date.status) {\n            this.setState({ collectionTimeSlots: date.slotTime });\n        }\n    }\n\n    allFields: any = this.props.fields;\n\n    setData(e: any, field: any) {\n        const fieldData = _.find(this.allFields, ['name', field]);\n        if (fieldData) {\n            fieldData.value = e;\n            this.props.onChange(this.allFields);\n        }\n    }\n\n    validate(e: any) {\n        const re = /^[0-9\\b]+$/;\n        if (e.target.value === '' || re.test(e.target.value)) {\n            this.setState({ mobile: e.target.value })\n        }\n    }\n\n    getValue(key: string) {\n        const data = _.find(this.props.fields, ['name', key]);\n        if (data && data.value) {\n            return data.value;\n        }\n        return '';\n    }\n\n    render() {\n        const { t }: any = this.props;\n        return (\n            <div className='form'>\n                {\n                    this.state.datesLoading && \n                    <div id=\"loader\" className=\"loader\"></div>\n                }\n                <div className=\"title\">Order Details</div>\n                <Form layout=\"vertical\">\n                    <Form.Item name='title' label={t('forms.Title')} rules={[{ required: true, message: `${t('forms.Title')} is required!` }]}>\n                        <Select size=\"large\" placeholder={t('forms.SelectPlaceholder')} defaultValue={this.getValue('title')} onChange={(e) => this.setData(e, 'title')}>\n                            <Option value=\"Mr.\">Mr.</Option>\n                            <Option value=\"Mrs.\">Mrs.</Option>\n                            <Option value=\"Miss\">Miss</Option>\n                        </Select>\n                    </Form.Item>\n                    <Form.Item name='lastName' label={t('forms.LastName')} rules={[{ required: true, message: `${t('forms.LastName')} is required!` }]}>\n                        <Input size=\"large\" placeholder={t('forms.LastName')} defaultValue={this.getValue('lastName')} onChange={(e) => this.setData(e.target.value, 'lastName')} />\n                        {\n                            false && <span className=\"ant-form-text\">Last Name</span>\n                        }\n                    </Form.Item>\n                    <Form.Item name='mobileNumber' label={t('forms.MobileNumber')} rules={[{ required: true, message: `${t('forms.MobileNumber')} is required!` }]}>\n                        <Input.Group compact>\n                            <Input style={{ width: '10%' }} disabled={true} size=\"large\" defaultValue=\"852\" />\n                            <Input style={{ width: '90%' }} maxLength={8} size=\"large\" placeholder={t('forms.MobileNumber')} defaultValue={this.getValue('mobileNumber')} value={this.state.mobile} onChange={(e) => {this.setData(e.target.value, 'mobileNumber'); this.validate(e);}} />\n                        </Input.Group>\n                    </Form.Item>\n                    <Form.Item name='collectionBranch' label={t('forms.CollectionBranch')} rules={[{ required: true, message: `${t('forms.CollectionBranch')} is required!` }]}>\n                        <Select labelInValue size=\"large\" placeholder={t('forms.SelectPlaceholder')} defaultValue={this.getValue('collectionBranch')} onChange={(e) => { this.getDateList(e); this.setData(e, 'collectionBranch'); }}>\n                            {Object.entries(this.state.branchList).map(([k, v]: any) => (\n                                _.size(v) &&\n                                <OptGroup label={k === 'regionOne' ? t('forms.regionOne') : ((k === 'regionTwo' ? t('forms.regionTwo') : t('forms.regionThree')))}>\n                                    {v.map((d: any) => (\n                                        <Option value={d.code}>{(this.props.lang === 'en') ? d.name : d.chineseName}</Option>\n                                    ))}\n                                </OptGroup>\n                            ))}\n                        </Select>\n                    </Form.Item>\n                    {\n                        this.state.dateList.length===0 && this.state.datesLoaded &&\n                        <span className=\"field-error\">{t('forms.noslotsavailable')}</span>\n                    }\n                    <Form.Item name='collectionDate' label={t('forms.CollectionDate')} rules={[{ required: true, message: `${t('forms.CollectionDate')} is required!` }]}>\n                        <DatePicker disabled={_.size(this.state.dateList) < 1} size=\"large\" format={'DD/MM/YYYY'} defaultValue={this.getValue('collectionDate')} disabledDate={(e) => this.disabledDate(e)} onChange={(e) => { this.getTimeSlots(e); this.setData(e, 'collectionDate'); }}\n                            style={{\n                                width: '100%',\n                            }}\n                        />\n                    </Form.Item>\n                    <Form.Item name='collectionTimeslot' label={t('forms.CollectionTimeslot')} rules={[{ required: true, message: `${t('forms.CollectionTimeslot')} is required!` }]}>\n                        <Select size=\"large\" disabled={_.size(this.state.dateList) < 1} placeholder={t('forms.SelectPlaceholder')} defaultValue={this.getValue('collectionTimeslot')} onChange={(e) => this.setData(e, 'collectionTimeslot')}>\n                            {this.state.collectionTimeSlots.map((dt) => (\n                                <Option value={dt['slot-time']}>{dt['slot-time']}</Option>\n                            ))}\n                        </Select>\n                    </Form.Item>\n                    <Form.Item label={t('forms.Quantity')}>\n                        <Space direction='vertical'>\n                            <span className=\"ant-form-text\">1</span>\n                            <span className=\"ant-form-text\">{t('forms.QuantityText')}</span>\n                        </Space>\n                    </Form.Item>\n                    <Form.Item label={t('forms.Declaration')}>\n                        <Space direction='vertical'>\n                            <Checkbox checked={this.state.info} onChange={(e) => this.setState({ info: e.target.checked })}>{t('forms.DeclarationPoints.1')}</Checkbox>\n                            <Checkbox checked={this.state.termsCondition} onChange={(e) => this.setState({ termsCondition: e.target.checked })}>{t('forms.DeclarationPoints.2')}</Checkbox>\n                        </Space>\n                    </Form.Item>\n                </Form>\n            </div>\n        )\n    }\n}\nconst FormsTranslated: any = withTranslation()(Forms);\nexport default FormsTranslated;","import './review-booking.scss';\n\nimport { Component } from \"react\";\nimport { Col, Row } from 'antd';\nimport { withTranslation } from 'react-i18next';\nimport { CommonHttpService } from '../../../services/common-http.service';\nimport _ from 'lodash';\nimport moment from 'moment'\n\nclass ReviewBooking extends Component {\n    state = { mobile: '', selectedRowKeys: [], mobileSearch: null, loadingAppointment: false, appointmentData: null, status: null };\n    service = new CommonHttpService();\n\n    componentWillUnmount() {\n        this.setState({ mobile: '', selectedRowKeys: [], mobileSearch: null, loadingAppointment: false, appointmentData: null, status: null });\n    }\n    \n    componentDidMount() {\n        console.log(this.props.fields);\n    }\n\n    props: any = this.props;\n    constructor(props?: any) {\n        super(props);\n        props = this.props;\n        console.log(this.props);\n        console.log(this.props.fields[0].title);\n    }\n\n    getValue(key: any) {\n        const data = _.find(this.props.fields, ['name', key]);\n        console.log(\"data is:\",data);\n        if (data && data.value) {\n            return (key === 'collectionDate') ? moment(data.value).format('DD/MM/YYYY') : (key === 'collectionBranch' && data.value && data.value.label) ? data.value.label : data.value;\n        }        \n        return '-';\n    }\n\n    render() {\n        const { t }: any = this.props;\n        return (\n            <div className='review-booking'>\n                <div className=\"title\">Review Order Details</div>\n                <div className='prop-list'>\n                    <Col className='prop-li' span={16} push={4} pull={4}>\n                        <Row>\n                            <Col span={5}>{t('forms.Title')}</Col>\n                            <Col span={1}>:</Col>\n                            <Col span={16}>{this.getValue('title') || '-'}</Col>\n                        </Row>\n                    </Col>\n                    <Col className='prop-li' span={16} push={4} pull={4}>\n                        <Row>\n                            <Col span={5}>{t('forms.LastName')}</Col>\n                            <Col span={1}>:</Col>\n                            <Col span={16}>{this.getValue('lastName') || '-'}</Col>\n                        </Row>\n                    </Col>\n                    <Col className='prop-li' span={16} push={4} pull={4}>\n                        <Row>\n                            <Col span={5}>{t('forms.MobileNumber')}</Col>\n                            <Col span={1}>:</Col>\n                            <Col span={16}>{this.getValue('mobileNumber') || '-'}</Col>\n                        </Row>\n                    </Col>\n                    <Col className='prop-li' span={16} push={4} pull={4}>\n                        <Row>\n                            <Col span={5}>{t('forms.CollectionBranch')}</Col>\n                            <Col span={1}>:</Col>\n                            <Col span={16}>{this.getValue('collectionBranch') || '-'}</Col>\n                        </Row>\n                    </Col>\n                    <Col className='prop-li' span={16} push={4} pull={4}>\n                        <Row>\n                            <Col span={5}>{t('forms.CollectionDate')}</Col>\n                            <Col span={1}>:</Col>\n                            <Col span={16}>{this.getValue('collectionDate') || '-'}</Col>\n                        </Row>\n                    </Col>\n                    <Col className='prop-li' span={16} push={4} pull={4}>\n                        <Row>\n                            <Col span={5}>{t('forms.CollectionTimeslot')}</Col>\n                            <Col span={1}>:</Col>\n                            <Col span={16}>{this.getValue('collectionTimeslot') || '-'}</Col>\n                        </Row>\n                    </Col>\n                    <Col className='prop-li' span={16} push={4} pull={4}>\n                        <Row>\n                            <Col span={5}>{t('forms.Quantity')}</Col>\n                            <Col span={1}>:</Col>\n                            <Col span={16}>\n                                <Col span={24}>\n                                    <div className=\"ant-form-text\">1</div>\n                                    <div className=\"ant-form-text\">{t('forms.QuantityText')}</div>\n                                </Col>\n                            </Col>\n                        </Row>\n                    </Col>\n                </div>\n            </div>\n        );\n    }\n}\nconst ReviewBookingTranslated: any = withTranslation()(ReviewBooking);\nexport default ReviewBookingTranslated;","import { Component } from \"react\";\r\nimport { Modal, Button } from 'antd';\r\nimport { withTranslation } from 'react-i18next';\r\n\r\nclass ModalComponent extends Component {\r\n    props: any = this.props;\r\n    state = { isModalVisible: false };\r\n\r\n    componentWillUnmount() {\r\n        this.setState({ isModalVisible: false });\r\n    }\r\n\r\n    render() {\r\n        const { t }: any = this.props;\r\n        return (\r\n            <Modal title={t('new_booking.header')} visible={this.props.visible} onCancel={() => this.props.onChange(false)} footer={[\r\n                <Button key=\"submit\" type=\"primary\" onClick={() => this.props.onChange(false)}>\r\n                    {t('modal.okbutton')}\r\n                </Button>\r\n            ]}>\r\n                {this.props.body}\r\n            </Modal>\r\n        );\r\n    }\r\n}\r\nconst ModalComponentTranslated: any = withTranslation()(ModalComponent);\r\nexport default ModalComponentTranslated;","import './new-booking.scss';\n\nimport { Layout, Button, Row, Col, Space } from 'antd';\nimport { ArrowLeftOutlined, ArrowRightOutlined , CheckCircleTwoTone } from '@ant-design/icons';\nimport { Component } from 'react';\nimport FormsTranslated from '../../form/form';\nimport ReviewBookingTranslated from '../review-booking/review-booking';\nimport { withTranslation } from 'react-i18next';\nimport { CommonHttpService } from '../../../services/common-http.service';\nimport ModalComponentTranslated from '../../modal';\nimport * as _ from 'lodash';\nimport moment from 'moment'\n\nconst { Footer } = Layout;\n\nconst formControls = [\n    { label: 'Title', name: 'title', value: null, required: true },\n    { label: 'Last Name', name: 'lastName', value: null, required: true },\n    { label: 'Mobile Number', name: 'mobileNumber', value: null, required: true },\n    { label: 'Collection Branch', name: 'collectionBranch', value: null, required: true },\n    { label: 'Collection Date', name: 'collectionDate', value: null, required: true },\n    { label: 'Collection Timeslot', name: 'collectionTimeslot', value: null, required: true }\n]\n\nclass NewBooking extends Component {\n    form: any;\n    state = { bookingProgress: false, status: null , refNo: '', fields: formControls, orderStatus: \"change\" , showModal: false, modalMsg: null};\n    props: any = this.props;\n    service = new CommonHttpService();\n    constructor(props?: any) {\n        super(props);\n        props = this.props;\n        console.log(\"lanaguge:\"+this.props.lang)\n        console.log(\"uuid:\"+this.props.uuid)\n    }\n\n    componentWillUnmount() {\n       // this.setState({ fields: formControls, orderStatus: \"change\" });\n    }\n\n    getValue(key: any) {\n        const data: any = _.find(this.state.fields, ['name', key]);\n        console.log(\"data is:\",data);\n        if (data && data.value) {\n            return (key === 'collectionDate') ? moment(data.value).format('DD/MM/YYYY') : (key === 'collectionBranch' && data.value && data.value.label) ? data.value.label : data.value;\n\n        }        \n        return '-';\n    }\n\n    getBranchCode(key: any) {\n        console.log(\"data for branch code:\",this.state.fields)\n        const data: any = _.find(this.state.fields, ['name', key]);\n        console.log(\"data is:\",data);\n        if (data && data.value) {\n            return (key === 'collectionBranch') ? data.value.value : '-';\n        }        \n        return '-';\n    }\n\n    get disableButton(): boolean {\n        return (!!_.find(this.state.fields, ['value', null]) || !!_.find(this.state.fields, ['value', undefined]));\n    }\n\n    submitOrder() {\n        this.setState({ status: null });\n        this.setState({ bookingProgress: true });\n        let validateCaptcha = {\n            \"data\":\n            {\n                \"id\": 0,\n                \"type\": \"APPOINTMENT\",\n                \"attributes\": { \n                                \"unique-id\": this.props.uuid, \n                                \"branch-code\": this.getBranchCode('collectionBranch'),\n                                \"title\": this.getValue('title'),\n                                \"appointment-slot\": this.getValue('collectionTimeslot'),\n                                \"last-name\": this.getValue('lastName'),\n                                \"mobileNo\": '852'+this.getValue('mobileNumber'),\n                                \"appointment-date\": this.getValue('collectionDate'),\n                                \"quantity\": 1, \n                                \"booked-date\": moment().format('YYYY-MM-DD HH:mm:ss.SSS'),\n                                \"status\": 'booked',\n                                \"language-code\": this.props.lang,\n                                \"branch-name\":this.getValue('collectionBranch'),\n                                \"ref-id\": this.props.uuid\n                                }\n            }\n        };\n        this.service.post('', validateCaptcha,this.props.uuid,this.props.lang).then((result) => {\n            this.setState({ bookingProgress: false });\n            this.setState({\n                status:result.status,\n            });\n            return result.json();\n        }).then((response) =>{ \n            console.log(\"result.status:\",this.state.status+\", ref\",response['tp-ref'])\n            if (this.state.status === 404) {\n                \n            } else if (this.state.status === 200) {\n                this.setState({ navigate: true });\n                this.setState({ showModal: true });\n                this.setState({ modalMsg: \"booking_success\" });\n                this.setState({ refNo: response['tp-ref']});\n            } else {\n                \n            }\n        }).catch((error) =>{\n            //TODO:\n        });\n    }\n\n    reviewOrder(fields: any) {\n        //this.setState({ fields });\n        this.setState({ orderStatus: 'review' });\n    }\n\n    backToChange() {\n        this.setState({ orderStatus: 'change' });\n    }\n\n    render() {\n        const { t }: any = this.props;\n        return (\n            <span>\n                {\n                    this.state.bookingProgress && \n                    <div id=\"loader\" className=\"loader\"></div>\n                }\n                {\n                    this.state.orderStatus === 'change' &&\n                    <FormsTranslated {...this.props} form={this.form} fields={this.state.fields} onChange={(newFields: any) => { this.setState({ fields: newFields }); }} />\n                }\n                {\n                    this.state.orderStatus === 'review' &&\n                    <ReviewBookingTranslated fields={this.state.fields} />\n                }\n                <Footer>\n                    <Row className='footer-row'>\n                        <Col span={4} offset={20}>\n                            <Row>\n                                {\n                                    this.state.orderStatus === 'review' &&\n                                    <Space align='end'>\n                                        <Col span={12}>\n                                            <Button danger type='primary' icon={<ArrowLeftOutlined />} onClick={() => this.backToChange()}>{t('new_booking.button.back')}</Button>\n                                        </Col>\n                                        <Col span={12}>\n                                            <Button className='review-btn' disabled={this.disableButton} type='primary' icon={<ArrowRightOutlined />} onClick={() => this.submitOrder()}>{t('new_booking.button.submit')}</Button>\n                                        </Col>\n                                    </Space>\n                                }\n                                {\n                                    this.state.orderStatus === 'change' &&\n                                    <Col span={16} offset={8}>\n                                        <Button className='submit-btn' disabled={this.disableButton} type='primary' icon={<ArrowRightOutlined />} onClick={() => this.reviewOrder(this.state.fields)}>{t('new_booking.button.review')}</Button>\n                                    </Col>\n                                }\n                            </Row>\n                        </Col>\n                    </Row>\n                </Footer>\n                <ModalComponentTranslated visible={this.state.showModal} body={\n                    <Col>\n                        <Space>\n                            <CheckCircleTwoTone style={{ fontSize: '30px' }} twoToneColor=\"#52c41a\" />\n                            <div>{t('new_booking.'+this.state.modalMsg)}</div>\n                        </Space>\n                        {\n                            this.state.refNo!=='' &&\n                                <div> {t('new_booking.refnumber')} <b>{this.state.refNo}</b></div>\n                        }\n                    </Col>\n                } onChange={(event: any) => this.setState({ showModal: event })}></ModalComponentTranslated>                \n            </span>\n        );\n    }\n}\n\nconst NewBookingTranslated = withTranslation()(NewBooking);\nexport default NewBookingTranslated;","import './update-booking.scss';\n\nimport { Component } from \"react\";\nimport { Button, Col, Form, Input, Row, Space, Table} from 'antd';\nimport { ArrowRightOutlined, CheckCircleTwoTone  } from '@ant-design/icons';\nimport { withTranslation } from 'react-i18next';\nimport { CommonHttpService } from '../../../services/common-http.service';\nimport * as _ from 'lodash';\nimport ModalComponentTranslated from '../../modal';\n\nvar dateFormat = require('dateformat');\n\n\nclass UpdateBooking extends Component {\n    state = { modalMsg: '', refNo: '' , showModal: false, mobile: '',mobileNumber:'' , rowSelected: false ,selectedRowKeys: [], selectedRows: [], mobileSearch: null, loadingAppointment:false, appointmentData: null, status: null };\n    service = new CommonHttpService();\n    \n\n    componentWillMount() {\n        console.log(\"tereeeee\");\n        this.setState({ appointmentData: null });\n        this.setState({ selectedRows: null });\n        this.setState({ selectedRowKeys: null });\n        this.setState({ rowSelected: false });\n    }\n\n    componentDidUnMount() {\n        console.log(\"testsss....\");\n        this.setState({ appointmentData: null });\n        this.setState({ selectedRows: null });\n        this.setState({ selectedRowKeys: null });\n        this.setState({ rowSelected: false });\n    }\n\n    \n    getAppointments() {\n        this.setState({ loadingAppointment: true });\n        this.setState({ appointmentData: null });\n        this.rowSelection = {\n            selectedRowKeys: [],\n            onChange: this.onSelectChange\n        }\n        let getAppointmentData = {\n            \"data\":\n            {\n                \"id\": 0,\n                \"type\": \"APPOINTMENT\",\n                \"attributes\": { \"unique-id\": this.props.uuid, \"mobileNo\":'852'+this.state.mobileNumber}\n            }\n        };\n        this.service.post('/appointments', getAppointmentData,this.props.uuid,this.props.lang).then(res => {\n            this.setState({\n                status:res.status,\n            });\n            return res.json();\n        }).then((response) =>{ \n            this.setState({ mobile: '' });\n            if (this.state.status === 404) {\n                this.setState({ loadingAppointment: false });\n            } else if (this.state.status === 200) {\n                this.setState({ loadingAppointment: false });\n                _.each(response, (el:any)  => {\n                    console.log(\"test:\");\n                    el[\"appointmentdate\"] = dateFormat(el[\"appointment-date\"],\"dd-mm-yyyy\")\n                    el[\"appointment-date\"] = dateFormat(el[\"appointment-date\"],\"dd/mm/yyyy\")\n                })\n                this.setState({ appointmentData: response});                \n            } else {\n                this.setState({ loadingAppointment: false });\n            }\n        }).catch((error) =>{\n            this.setState({ loadingAppointment: false });\n        });\n    }\n\n    cancelAppointment() {\n        this.setState({ loadingAppointment: true });\n        let cancelAppointment = {\n            \"data\":\n            {\n                \"id\": 0,\n                \"type\": \"CANCELATION\",\n                \"attributes\": this.state.selectedRows[0]\n            }\n        } as any;\n        delete cancelAppointment.data.attributes['booked-date']\n        cancelAppointment.data.attributes['unique-id']=this.props.uuid;\n        cancelAppointment.data.attributes['id']=0;\n        cancelAppointment.data.attributes['status']='cancelled';\n        cancelAppointment.data.attributes['language-code']=this.props.lang;\n        this.service.post('', cancelAppointment,this.props.uuid,this.props.lang).then((result) => {\n            this.setState({ verifyButtonLoader: false });\n            console.log(\"result.status:\"+result.status)\n            if (result.status === 404) {\n                this.setState({ loadingAppointment: false });\n            } else if (result.status === 200) {\n                this.setState({ loadingAppointment: false });\n                this.setState({ showModal: true });\n                this.setState({ modalMsg: \"cancel_success\" });\n                this.setState({ rowSelected: true });\n                this.setState({ refNo: cancelAppointment.data.attributes['ref-id'] });\n            } else {\n                this.setState({ loadingAppointment: false });\n            }\n        }).catch((error) =>{\n            this.setState({ loadingAppointment: false });\n        });\n    }\n\n    onSelectChange = (selectedRowKeys: any, selectedRows: any) => {\n        console.log(\"selectedRows:\", selectedRows[0]);\n        this.setState({ selectedRowKeys });\n        this.setState({ selectedRows });\n        this.setState({ rowSelected: true });\n        this.rowSelection.selectedRowKeys = selectedRowKeys;\n    };\n\n    rowSelection = {\n        selectedRowKeys: [],\n        onChange: this.onSelectChange\n    };\n\n\n    validate(e: any){\n        const re = /^[0-9\\b]+$/;\n        if (e.target.value === '' || re.test(e.target.value)) {\n            this.setState({mobile: e.target.value})\n            this.setState({mobileNumber: e.target.value})\n            this.setState({ rowSelected: false });\n        }\n    }\n\n\n    props: any = this.props;\n    constructor(props?: any) {\n        super(props);\n        props = this.props;\n        console.log(\"lanaguge:\"+this.props.lang)\n        console.log(\"uuid:\"+this.props.uuid)\n        this.validate = this.validate.bind(this);\n    }\n    columns = [\n        {\n            title: 'Collection Date',\n            dataIndex: 'appointmentdate'\n        },\n        {\n            title: 'Collection Branch',\n            dataIndex: 'branch-name'\n        },\n        {\n            title: 'Collection Timeslot',\n            dataIndex: 'appointment-slot'\n        },\n        {\n            title: 'Reference Number',\n            dataIndex: 'ref-id'\n        }\n    ];\n\n    data: any = [];\n\n    \n\n    \n    render() {\n        for (let i = 0; i < 150; i++) {\n            this.data.push({\n                key: i,\n                reference_number: i,\n                collection_date: i,\n                collection_timeslot: `Edward King ${i}`,\n                collection_branch: 32\n            });\n        }\n        const { t }: any = this.props;\n        return (\n            <div className='update-booking'>\n            <Row>\n                <Col span={9}>\n                    <Form className='update-booking' layout=\"horizontal\">\n                        <Space direction=\"vertical\">\n                            <Form.Item name='mobileNumber' label={t('update_booking.mobile')}>\n                                <Input.Group compact>\n                                    <Input style={{ width: '15%' }} disabled={true} size=\"large\" defaultValue=\"852\" />\n                                    <Input style={{ width: '85%' }} size=\"large\" maxLength={8} placeholder={t('update_booking.mobile')}  value={this.state.mobile} onChange={this.validate} autoFocus onPressEnter={() => this.getAppointments()}/>\n                                </Input.Group>\n                            </Form.Item>\n                            {\n                            !this.state.rowSelected &&\n                            <Col className='submit-button' span={8} offset={8}>\n                                <Button className='submit-btn' type=\"primary\" disabled={this.state.mobile.length !== 8} icon={<ArrowRightOutlined />} onClick={() => this.getAppointments()}>{t('update_booking.button')}</Button>\n                            </Col>\n                            }\n                            {\n                            this.state.rowSelected &&\n                            <Col className='submit-button' span={10} offset={8}>\n                                <Button className='submit-btn' type=\"primary\" icon={<ArrowRightOutlined />} onClick={() => this.cancelAppointment()}>{t('update_booking.cancelbutton')}</Button>\n                            </Col>\n                            }\n                            \n                        </Space>\n                    </Form>\n                </Col>\n                </Row>\n                <Row className='update-booking'>\n                {\n                    this.state.loadingAppointment && \n                    <div id=\"loader\" className=\"loader\"></div>\n                }\n                {\n                    this.state.appointmentData!==null &&\n                    <Col span={15}>\n                        <Table locale={ { emptyText:t('update_booking.norecordfound')+'852'+this.state.mobileNumber}} rowSelection={{ type: 'radio', ...this.rowSelection }} columns={this.columns} dataSource={this.state.appointmentData} size=\"small\" bordered scroll={{ y: 165 }} />\n                    </Col>\n                }\n                <ModalComponentTranslated visible={this.state.showModal} body={\n                    <Col>\n                        <Space>\n                            <CheckCircleTwoTone style={{ fontSize: '30px' }} twoToneColor=\"#52c41a\" />\n                            <div>{t('update_booking.'+this.state.modalMsg)}</div>\n                        </Space>\n                        {\n                            this.state.refNo!=='' &&\n                                <div> {t('new_booking.refnumber')} <b>{this.state.refNo}</b></div>\n                        }\n                    </Col>\n                } onChange={(event: any) => { this.setState({ showModal: event }); this.getAppointments();}}></ModalComponentTranslated>                \n            </Row>\n            </div>\n        );\n    }\n}\nconst UpdateBookingTranslated = withTranslation()(UpdateBooking);\nexport default UpdateBookingTranslated;","import './tab.scss';\n\nimport { Layout, Tabs } from 'antd';\nimport NewBooking from './new-booking/new-booking';\nimport UpdateBooking from './update-booking/update-booking';\nimport { withTranslation } from 'react-i18next';\nimport { Component } from 'react';\n\nconst { Header, Content } = Layout;\nconst { TabPane } = Tabs;\n\nclass Tab extends Component {\n    props: any = this.props;\n    constructor(props?: any) {\n        super(props);\n        props = this.props;\n    }\n\n\n    render() {\n        const { t }: any = this.props;\n        return (\n            <Layout>\n                <Header>\n                    <div className='header'>{t('new_booking.header')}</div>\n                    <div>{t('new_booking.hint')}</div>\n                </Header>\n                <Content>\n                    <Tabs defaultActiveKey=\"new\">\n                        <TabPane tab={t('tab.new_booking')} key=\"new\">\n                            <NewBooking {...this.props}/>\n                        </TabPane>\n                        <TabPane tab={t('tab.update_booking')} key=\"cancellationAndEnquiries\">\n                            <UpdateBooking {...this.props}/>\n                        </TabPane>\n                    </Tabs>\n                </Content>\n            </Layout>\n        );\n    }\n}\n\nconst TabTranslated = withTranslation()(Tab);\n\nexport default TabTranslated;\n","import { Component } from 'react';\nimport { withTranslation } from 'react-i18next';\nimport './important-notes.scss';\n\nclass ImportantNotes extends Component {\n    render() {\n        const { t }: any = this.props;\n        return (\n            <div className='important-notes'>\n                <div className=\"title\">{t('importantNotes.title')}</div>\n                <ol>\n                    <li>{t(`importantNotes.1`)}</li>\n                    <li>{t(`importantNotes.2`)}</li>\n                    <li>{t(`importantNotes.3`)}</li>\n                    <li>{t(`importantNotes.4`)}</li>\n                    <li>{t(`importantNotes.5`)}</li>\n                    <li>{t(`importantNotes.6`)}</li>\n                    <li>{t(`importantNotes.7`)}</li>\n                </ol>\n            </div>\n        )\n    }\n}\n\nconst ImportantNotesTranslated = withTranslation()(ImportantNotes);\n\nexport default ImportantNotesTranslated;","import './Captcha.scss';\nimport { Component } from \"react\";\nimport { Button,  Input, Layout } from 'antd';\nimport { GlobalOutlined, ReloadOutlined } from '@ant-design/icons';\nimport { withTranslation } from 'react-i18next';\nimport i18n from '../../wrappers/i18n/i18n';\nimport { CommonHttpService } from '../../services/common-http.service';\nimport TabTranslated from '../tab/tab';\nimport ImportantNotesTranslated from '../important-notes/important-notes';\nconst { Header, Content } = Layout;\n\n\nclass Captcha extends Component {\n    state: any = { navigate: false, captchaInput: '', verifyButtonLoader: false, reloadCaptchaLoader: false, captcha: null, lang: 'en', message: null };\n    service = new CommonHttpService();\n    constructor(props?: any) {\n        super(props);\n        this.changeLanguageHandler('en');\n\n    }\n\n    componentDidMount() {\n        this.getStatus();\n    }\n\n    changeLanguageHandler(lang: any) {\n        this.setState({ lang });\n        this.service.setLanguage(lang);\n        i18n.changeLanguage(lang);\n    }\n\n    getStatus() {\n        this.service.get('/servicecheck', this.state.uuid, this.state.lang).then((result) => {\n            console.log(\"param value:\", result.paramValue)\n            if (result.paramValue === undefined) {\n                this.setState({ message: \"Error\" });\n            } else {\n                this.setState({ message: result.paramValue });\n            }\n            if (result.paramValue && result.paramValue.toLowerCase() === 'Up'.toLowerCase()) {\n                this.refreshCaptcha();\n            }\n        }).catch((error) => {\n            this.setState({ message: \"Error\" });\n        })\n    }\n\n    refreshCaptcha() {\n        this.setState({ reloadCaptchaLoader: true });\n        this.setState({ captchainvalid: false });\n        this.setState({ captchaInput: \"\" });\n        this.setState({ captcha: null });\n        this.service.get('/captcha', this.state.uuid, this.state.lang).then((result) => {\n            this.setState({ reloadCaptchaLoader: false });\n            this.setState({ captcha: result.data.captcha });\n            this.setState({ uuid: result.data.uuid });\n            this.service.setUUID(result.data.uuid);\n        }).catch((error) => {\n            this.setState({ reloadCaptchaLoader: false });\n            this.setState({ captcha: null });\n            this.setState({ message: \"Error\" });\n        })\n    }\n\n    validate(e: any) {\n        console.log(\"test in validate\" + e.target.value.toUpperCase());\n        const re = /^[0-9a-zA-Z\\b]+$/;\n        if (e.target.value === '' || re.test(e.target.value)) {\n            this.setState({ captchaInput: e.target.value.toUpperCase() })\n        }\n    }\n\n    verifyCaptcha() {\n        this.setState({ verifyButtonLoader: true });\n        let validateCaptcha = {\n            \"data\":\n            {\n                \"id\": 0,\n                \"type\": \"CAPTCHAVALIDATION\",\n                \"attributes\": { \"unique-id\": this.state.uuid, \"captha-answer\": this.state.captchaInput }\n            }\n        };\n        this.service.post('/captcha', validateCaptcha, this.state.uuid, this.state.lang).then((result) => {\n            this.setState({ verifyButtonLoader: false });\n            console.log(\"result.status:\" + result.status)\n            if (result.status === 404) {\n                this.setState({ navigate: false });\n                this.setState({ captchainvalid: true });\n                this.setState({ captchaInput: \"\" });\n            } else if (result.status === 200) {\n                this.setState({ navigate: true });\n            } else {\n                this.setState({ navigate: false });\n                this.setState({ captchainvalid: true });\n                this.setState({ captchaInput: \"\" });\n            }\n        }).catch((error) => {\n            this.setState({ captcha: null });\n            this.setState({ message: \"Error\" });\n            this.setState({ verifyButtonLoader: false });\n        });\n    }\n\n    render() {\n        const { t }: any = this.props;\n        console.log(this.state)\n        let propsdata = {\n            lang: this.state.lang,\n            uuid: this.state.uuid\n        }\n        if (this.state.navigate) {\n            return (\n                <TabTranslated {...propsdata} />\n            );\n        }\n        return (\n            <Layout className=\"captcha\">\n               <Header>\n               <img className='sc-logo' src='/assets/images/sc-logo.svg' alt=\"Logo\" />\n                    <div className='border'>\n                        <div className='border-top'></div>\n                        <div className='border-bottom'></div>\n                    </div>\n                    <div className='header-title'>{t('new_booking.header')}\n                    <Button icon={<GlobalOutlined />} shape=\"round\" className='lang' onClick={() => this.changeLanguageHandler(this.state.lang === 'en' ? 'zh' : 'en')}>{t(`captcha.selectOptions.${this.state.lang === 'en' ? 'English' : 'Chinese'}`)}</Button>\n                    </div>\n                </Header>\n                <Content>\n                    <ImportantNotesTranslated />\n                    <div className=\"captcha-validation\">\n                        {\n                            !this.state.message &&\n                            <div id=\"loader\" className=\"loader\"></div>\n                        }\n                        {/* Technical Error */}\n                        {\n                            this.state.message && this.state.message.toLowerCase() === 'Error'.toLowerCase() &&\n                            <div className='header'>{t('captcha.TechnicalError')}</div>\n                        }\n                        {/* System Maintenance */}\n                        {\n                            this.state.message && this.state.message.toLowerCase() === 'Maintenance'.toLowerCase() &&\n                            <div className='header'>{t('captcha.Maintenance')}</div>\n                        }\n                        {/* Thank You */}\n                        {\n                            this.state.message && this.state.message.toLowerCase() === 'Thankyou'.toLowerCase() &&\n                            <div className='header'>{t('captcha.Thankyou')}</div>\n                        }\n                        {\n                            this.state.message && this.state.message.toLowerCase() === 'Up'.toLowerCase() &&\n                            <div className=\"block\">\n                                <div>{t('captcha.header')}</div>\n                                {\n                                    this.state.reloadCaptchaLoader && !this.state.captcha &&\n                                    <div id=\"loader\" className=\"loader\"></div>\n                                }\n                                {\n                                    !this.state.reloadCaptchaLoader && this.state.captcha &&\n                                    <div className='captcha-img'>\n                                        <img src={'data:image/png;base64,' + this.state.captcha} alt=\"Captcha\" />\n                                        <Button className='img-reload' shape=\"circle\" icon={<ReloadOutlined />} onClick={() => this.refreshCaptcha()}></Button>\n                                    </div>\n                                }\n\n                                <Input placeholder={t('captcha.placeholder')} size=\"large\" maxLength={7} value={this.state.captchaInput} autoFocus onChange={(e) => { this.validate(e); }} onPressEnter={() => this.verifyCaptcha()} />\n                                {\n                                    !this.state.reloadCaptchaLoader && this.state.captcha && this.state.captchainvalid &&\n                                    <div className='captcha-error'>\n                                        {t('captcha.Error')}\n                                    </div>\n                                }\n                                <Button block disabled={this.state.captchaInput?.length !== 7} onClick={() => this.verifyCaptcha()}>{t('captcha.button')}</Button>\n                                {\n                                    this.state.verifyButtonLoader &&\n                                    <div id=\"loader\" className=\"loader\"></div>\n                                }\n                            </div>\n                        }\n                    </div>\n                </Content>\n            </Layout>\n        )\n    }\n}\nconst CaptchaTranslated = withTranslation()(Captcha);\nexport default CaptchaTranslated;","import './App.scss';\n\nimport { Component } from 'react';\nimport Tab from './components/tab/tab';\nimport Captcha from './components/captcha/Captcha';\n\nimport { BrowserRouter, Redirect, Route } from 'react-router-dom';\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <Route path=\"/captcha\" component={Captcha} />\n        <Route path=\"/booking\" component={Tab} />\n        <Redirect to=\"/captcha\" />\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport \"./wrappers/i18n/i18n\";\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}